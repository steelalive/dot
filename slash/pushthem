#!/data/dot/slash/sbin/bash
. /data/dot/slash/etc/rc || {
	echo RC file not found...
	exit
}
busybox mount -o rw,remount,rw /system
busybox mount -o rw,remount,rw /
[ -e $slash ] || exit
. $dot/bin/remnt
[ $slash ] || {
	echo Slash not defined
	exit 111
}
cd $slash || exit
chown 2000:2000 -R /data/dot
chmod 777 -R /data/dot
dot=/data/dot

ln -sf $dot/root/.nanorc /system/etc/nanorc
ln -sf $slash/etc/bash /system/etc/ 2>/dev/null
cp -a $slash/etc/terminfo /system/etc/
ln -sf $slash/EST5EDT /system/etc/localtime
ln -sf $slash/etc/gps.conf /system/etc/gps.conf
ln -sf $slash/etc/gps.conf /system/vendor/etc/gps.conf
ln -sf $slash/etc/nfsinjector/service.sh /system/etc/init.d/
mkdir -p /system/etc/ssh
[ -e /system/etc/ssh/sshd_config ] || ln -s /dot/etc/folders/ssh/sshd_config /system/etc/ssh/sshd_config
[ -e /system/etc/highlight ] || ln -s $slash/etc/highlight /system/etc
[ -e /etc/pacman.conf ] || { [ -e $lux/etc/pacman.conf ] && cp -av $lux/etc/pacman.conf /system/etc/; }
cp -av $slash/sbin/bash /system/xbin/
cp -av $slash/sbin/bash /system/bin/
ln -sf /proc/self/mounts /system/etc/mtab
ln -sf $lux/etc/pam.d /system/etc/
echo EST5EDT >/system/etc/timezone
cd /data/dot/slash || exit
echo "Initialize system..."
[ -e /external_sd ] || . /system/etc/mkshrc
busybox mount -o rw,remount /system
/data/dot/bin/remnt
cat $ex/kernel.sh >/system/etc/init.d/kernel.sh
chmod 777 /system/etc/init.d/kernel.sh
echo "System init completed!"
cat $dot/bin/build.prop >/data/local.prop
echo 'SYSTEMLESS=true' >/data/.supersu
sed -i '/<allow-in-power-save package="com.google.android.gms"/d' /system/etc/sysconfig/google.xml 2>/dev/null
sed -i '/<allow-in-data-usage-save package="com.google.android.gms"/d' /system/etc/sysconfig/google.xml 2>/dev/null
if ! grep -q "/system/etc/mk" /system/etc/mkshrc; then
	echo '[ -e /system/etc/mk ] && . /system/etc/mk; ' >>/system/etc/mkshrc
	chmod -R 0777 /data/dot
fi
if [ ! -e /external_sd ] && ! settings list system | grep 'en-US,fr-CA'; then
	echo "Some defaults settings applied..."
	set -x
	settings put global policy_control immersive.full=
	settings put global guest_user_enabled 0
	settings put system time 24
	settings put system system_locales en-US,fr-CA
	settings put global install_non_market_apps 1
	settings put secure lockscreen.disabled 1
	settings put secure night_display_activated 1
	settings put global development_settings_enabled 1
	if settings list --cm system &>/dev/null; then
		settings put --cm system systemui_burnin_protection 1 2>/dev/null
		settings put --cm secure stats_collection 0
		settings put --cm secure feature_touch_hovering 0
	fi
	settings put secure install_non_market_apps 1
	settings put secure lockscreen.disabled 1
	set +x
fi
nocopy=' -e KitanaTweak -e MidnightCore -e PXM -e terminal_debloater -e terminal_systemizer -e xposed'
core=/sbin/.core/img
[ -e /data/adb/magisk.img ] || { [ -e $ex/magisk.img ] && cp $ex/magisk.* /data/adb/; }
if [ ! -e $core ]; then
	mkdir -p /magisk
	mount $ex/magisk.img /magisk
	core=/magisk
fi
if [[ -e $core ]]; then
	cd $core || exit
	for i in "$core"/*; do
		grep -o $nocopy <<<$i &>/dev/null || continue
		folder="$i/system"
		[ -e $folder ] || continue
		toybox cp -a --preserve=a "$folder" / || busybox cp -au "$folder" /
	done
	[ -e /data/adb/magisk.img ] && busybox cp -avu /data/adb/magisk.* $ex/
fi
rm_empty_dir /system/app/* /system/priv-app/*
echo "Done!"
# vi: ft=sh
