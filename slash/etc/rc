#case $- in
#	*i*) ;;
#	*) exit 0 ;;
#esac
# vim: set filetype=sh:
export dot=/data/dot
export slash="$dot/slash"
export ex="/mnt/media_rw/????-????"
[[ -e $ex ]] || ex="/storage/????-????"
[[ -e $ex ]] || ex=/sdcard
export termux="/data/data/com.termux/files/usr"
export termuxbin="/data/data/com.termux/files/usr/bin"
[[ -e $termux ]] || unset termux termuxbin
export LANG='en_US.UTF-8'
export pc=192.168.0.20 s4=192.168.0.8 tv=192.168.0.5
export PATH="/su/xbin:/su/bin:/supersu:/su:/data/adb/su/xbin:/data/adb/su/bin:${slash}/sbin:/data/sbin:/system/xbin:/sbin:/system/bin:/vendor/bin:/data/local/bin:/data/local/xbin:/data/adb/xbin:/data/adb/bin:/system/sbin:${PATH}:$slash/sbin:$dot/bin:$dot/bin/final:$dot"
result=":"
IFS=:
for p in $PATH; do
	[[ $result == *:"$p":* ]] || result="${result}${p}:"
done
result="${result#:}" PATH="${result%:}"
unset IFS
if shopt &>/dev/null; then
	for set_plus in noclobber notify monitor histexpand; do set +o "$set_plus"; done
	for set_minus in ignoreeof hashall pipefail emacs interactive-comments; do set -o "$set_minus"; done
	for shopt_opt in gnu_errfmt lastpipe direxpand autocd cdable_vars cdspell checkwinsize checkhash cmdhist dirspell extglob globstar histappend histreedit histverify hostcomplete huponexit interactive_comments mailwarn nocaseglob nocasematch no_empty_cmd_completion nullglob progcomp promptvars sourcepath execfail lithist; do
		builtin shopt -s "$shopt_opt" &>/dev/null
	done
	unset shopt_opt set_minus set_plus
fi

bb=$(command -v busybox 2>/dev/null) || bb="commmand -v "
export bb

bb() { command \\"$bb" "$@"; }

for i in /ex $(echo /mnt/media_rw/????-????) $(echo /storage/????-????) /external_sd; do
	[[ -e $i/misc-android ]] || continue
	export ex="$i"
done

echo /init.* | grep amlogic &>/dev/null && export HOSTNAME=TV
echo /init.* | grep mt6765 &>/dev/null && export HOSTNAME=POWER
[[ $HOSTNAME ]] || {
	getprop ro.product.name &>/dev/null && HOSTNAME="$(getprop ro.product.name)"
	export HOSTNAME
}
[[ -d $dot/root ]] && HOME=$dot/root
[[ -e $HOME ]] || HOME=$ex

[[ -e /etc/terminfo ]] && TERMINFO=/etc/terminfo
[[ -e $slash/etc/terminfo ]] && TERMINFO="$slash/etc/terminfo"
[[ -e /sbin/terminfo ]] && TERMINFO=/sbin/terminfo
[[ -e $TERMINFO ]] && export TERMINFO TERM=screen-256color

[[ -x $BASH ]] || export BASH=/data/dot/slash/sbin/bash
[[ -x $BASH ]] || BASH=$(command -v bash)
[[ -x $BASH ]] || [[ -x "$lux/usr/bin/bash" ]] && export BASH=$lux/usr/bin/bash

if [[ -e /external_sd ]]; then
	export ex=/external_sd sys=/system/system
else
	export sys=/system
fi

mkdir -p /tmp
[[ -d /data/local/tmp ]] && TMP=/data/local/tmp
[[ -d /tmp ]] && TMP=/tmp

[[ -x $slash/sbin/nano ]] && export EDITOR="$slash/sbin/nano" VISUAL="$EDITOR"

boot="$(find /dev/block -iname boot | tail -1)"
recovery="$(find /dev/block -iname recovery | tail -1)"
lk="$(find /dev/block -iname lk | tail -1)"

export TMP TMPDIR="$TMP" BASH SHELL="$BASH" HISTFILE="${dot}/root/histfile_android" HISTSIZE=50000 USER slash lk boot recovery lux
test "$HOSTNAME" && hostname "$HOSTNAME"
alias e='. $dot/bin/e'

cmdcompile() {
	cmd package compile -a -m everything
	if command -v fstrim; then
		fstrim /system
		fstrim /data
		fstrim /cache
	fi
}

hash remnt &>/dev/null && remnt

unalias src 2>/dev/null

pminstall() {
	[[ $1 ]] || command \ls ./*.apk
	for apk; do
		ANLO "Installing $apk ...\n"
		pm install --user 0 -r -g "$apk"
	done
}

unalias ls &>/dev/null
unset ls LS_OPTIONS &>/dev/null
if [[ -e $slash/sbin/ls ]]; then
	LS_BIN="$slash/sbin/ls"
elif [[ -e /system/xbin/ls ]]; then
	LS_BIN="$slash/sbin/ls"
else
	LS_BIN="ls"
fi

if $LS_BIN --help 2>&1 | grep 'Z'; then LS_OPTIONS=' -Z '; fi
if $LS_BIN --help 2>&1 | grep 'group-directories-first'; then
	export LS_OPTIONS="$LS_OPTIONS --group-directories-first "
fi
export LS_OPTIONS="$LS_OPTIONS -AHhpFl --color "

ls() { "$LS_BIN" $LS_OPTIONS "$@"; }
nano=$termuxbin/nano || unset nano
if [[ -x $nano ]]; then
	alias nano="$nano "
	export EDITOR="$nano " VISUAL="$nano "
fi

[[ -e /system/bin/logd ]] && mv /system/bin/logd /system/bin/logd.bak

#####_MISC_MAINTENANCE_#####
[[ -e /system/system/bin/logd ]] && mv /system/system/bin/logd /system/system/bin/logd.bak

test -x /usr/bin/bash || {
	rm /bin
	mkdir -p /bin /usr/bin /system/sbin
	[[ -x /bin/bash ]] || cp -av $slash/sbin/bash /bin/bash
	#	cp -av $slash/sbin/bash.full /data/sbin/bash
	#	cp -av $slash/sbin/bash.full /sbin/bash
	#	mount -o rbind $slash/sbin /usr/bin
	#	mount -o rbind $slash/sbin /system/xbin
	#	mount -o rbind $slash/etc/mkshrc /system/etc/mkshrc
	#	mount -o rbind $slash/etc/terminfo /system/etc/terminfo
	test -f /root/histfile || {
		mkdir -p /root
		chmod 755 /root
		mount -o rbind $dot/root /root
	}
	test -f /dot/init.sh || {
		mkdir -p /dot
		mount -o rbind $dot /dot
	}
}
#####_SETUP RC FILES_#####

init_incantation='
########## -INIT-  ##########
busybox mount -o remount,rw / 2>/dev/null
busybox mount -o remount,rw /system 2>/dev/null
/data/dot/slash/sbin/remnt 2>/dev/null
ln -s /data/dot /
ln -s /data/dot/slash/etc/mk / 2>/dev/null
ln -s /data/dot/slash/etc/rc / 2>/dev/null
ln -s /data/dot/slash / 2>/dev/null
chmod 777 -R /data/dot
########## _INIT_ ###########
'

#if ! $bb grep "/data/dot/slash" /system/etc/init.d/90userinit; then
#	mkdir -p /system/etc/init.d
#	echo "$init_incantation" >>/system/etc/init.d/90userinit
#fi
#####################################################################################################################
hash resize &>/dev/null && eval "$(resize)" &>/dev/null

# vi: ft=sh
