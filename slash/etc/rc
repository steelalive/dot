#case $- in
#	*i*) ;;
#	*) exit 0 ;;
#esac
# vim: set filetype=sh:
export dot=/data/dot
export slash="$dot/slash"
export ex="/mnt/media_rw/????-????"
[[ -e $ex ]] || ex="/storage/????-????"
[[ -e $ex ]] || ex=/sdcard
export termux="/data/data/com.termux/files/usr"
export termuxbin="/data/data/com.termux/files/usr/bin"
[[ -e $termux ]] || unset termux termuxbin
export LANG='en_US.UTF-8'
export pc=192.168.0.20 s4=192.168.0.8 tv=192.168.0.5
export PATH="/su/xbin:/su/bin:/supersu:/su:/data/adb/su/xbin:/data/adb/su/bin:${slash}/sbin:/data/sbin:/system/xbin:/sbin:/system/bin:/vendor/bin:/data/local/bin:/data/local/xbin:/data/adb/xbin:/data/adb/bin:/system/sbin:${PATH}:$slash/sbin:$dot/bin:$dot/bin/final:$dot"
result=":"
IFS=:
for p in $PATH; do
	[[ $result == *:"$p":* ]] || result="${result}${p}:"
done
result="${result#:}" PATH="${result%:}"
unset IFS
if shopt &>/dev/null; then
	for set_plus in noclobber notify monitor histexpand; do set +o "$set_plus"; done
	for set_minus in ignoreeof hashall pipefail emacs interactive-comments; do set -o "$set_minus"; done
	for shopt_opt in gnu_errfmt lastpipe direxpand autocd cdable_vars cdspell checkwinsize checkhash cmdhist dirspell extglob globstar histappend histreedit histverify hostcomplete huponexit interactive_comments mailwarn nocaseglob nocasematch no_empty_cmd_completion nullglob progcomp promptvars sourcepath execfail lithist; do
		builtin shopt -s "$shopt_opt" &>/dev/null
	done
	unset shopt_opt set_minus set_plus
fi

bb=$(command -v busybox 2>/dev/null) || bb="commmand -v "
export bb

bb() { command \\"$bb" "$@"; }

for i in /ex $(echo /mnt/media_rw/????-????) $(echo /storage/????-????) /external_sd; do
	[[ -e $i/misc-android ]] || continue
	export ex="$i"
done

echo /init.* | grep amlogic &>/dev/null && export HOSTNAME=TV
echo /init.* | grep mt6765 &>/dev/null && export HOSTNAME=POWER
[[ $HOSTNAME ]] || {
	getprop ro.product.name &>/dev/null && HOSTNAME="$(getprop ro.product.name)"
	export HOSTNAME
}
[[ -d $dot/root ]] && HOME=$dot/root
[[ -e $HOME ]] || HOME=$ex

[[ -e /etc/terminfo ]] && TERMINFO=/etc/terminfo
[[ -e $slash/etc/terminfo ]] && TERMINFO="$slash/etc/terminfo"
[[ -e /sbin/terminfo ]] && TERMINFO=/sbin/terminfo
[[ -e $TERMINFO ]] && export TERMINFO TERM=screen-256color

[[ -x $BASH ]] || export BASH=/data/dot/slash/sbin/bash
[[ -x $BASH ]] || BASH=$(command -v bash)
[[ -x $BASH ]] || [[ -x "$lux/usr/bin/bash" ]] && export BASH=$lux/usr/bin/bash

if [[ -e /external_sd ]]; then
	export ex=/external_sd sys=/system/system
else
	export sys=/system
fi

mkdir -p /tmp
[[ -d /data/local/tmp ]] && TMP=/data/local/tmp
[[ -d /tmp ]] && TMP=/tmp

[[ -x $slash/sbin/nano ]] && export EDITOR="$slash/sbin/nano" VISUAL="$EDITOR"

boot="$(readlink $(find /dev/block -iname boot | tail -1))"
recovery="$(readlink $(find /dev/block -iname recovery | tail -1))"
lk="$(readlink $(find /dev/block -iname lk | tail -1))"

export TMP TMPDIR="$TMP" BASH SHELL="$BASH" HISTFILE="${dot}/root/histfile_android" HISTSIZE=50000 USER slash lk boot recovery lux
test "$HOSTNAME" && hostname "$HOSTNAME"
alias e='. $dot/bin/e'

cmdcompile() {
	cmd package compile -a -m everything
	if command -v fstrim; then
		fstrim /system
		fstrim /data
		fstrim /cache
	fi
}

hash remnt &>/dev/null && remnt

unalias src 2>/dev/null

pminstall() {
	[[ $1 ]] || command \ls ./*.apk
	for apk; do
		ANLO "Installing $apk ...\n"
		pm install --user 0 -r -g "$apk"
	done
}

unalias ls &>/dev/null
unset ls LS_OPTIONS &>/dev/null
if [[ -e $slash/sbin/ls ]]; then
	LS_BIN="$slash/sbin/ls"
elif [[ -e /system/xbin/ls ]]; then
	LS_BIN="$slash/sbin/ls"
else
	LS_BIN="ls"
fi

if $LS_BIN --help 2>&1 | grep 'Z'; then LS_OPTIONS=' -Z '; fi
if $LS_BIN --help 2>&1 | grep 'group-directories-first'; then
	export LS_OPTIONS="$LS_OPTIONS --group-directories-first "
fi
export LS_OPTIONS="$LS_OPTIONS -AHhpFl --color "

ls() { "$LS_BIN" $LS_OPTIONS "$@"; }
command -v coreutils && ls() { coreutils --coreutils-prog=ls $LS_OPTIONS; }
fixpart() {
	for i in $(blkid | cut -d: -f1); do
		echo "##############################---${i}---#######################################"
		umount "$i" 2>/dev/null
		/sbin/e2fsck -fp "$i" 2>/dev/null
		[[ -e /sbin/fsck.ext4 ]] && fsck.ext4 -p "$i" 2>/dev/null
		resize2fs $i
		[[ $1 == t ]] && /sbin/tune2fs -c 30 -m 1 -o journal_data_writeback,nobarrier "$i"
		echo "###############################---${i}---#######################################"
	done
	fat=/dev/block/mmcblk1p1
	umount $fat 2>/dev/null
	fsck.exfat $fat 2>/dev/null
	fsck.fat $fat 2>/dev/null
	fsck_msdos $fat 2>/dev/null
	fsck.vfat $fat 2>/dev/null

}

nano=$termuxbin/nano || unset nano
if [[ -x $nano ]]; then
	alias nano="$nano "
	export EDITOR="$nano " VISUAL="$nano "
fi

#[[ -e /system/bin/logd ]] && mv /system/bin/logd /system/bin/logd.bak
#
#[[ -e /system/system/bin/logd ]] && mv /system/system/bin/logd /system/system/bin/logd.bak
#####_MISC_MAINTENANCE_#####

test -x /usr/bin/bash || {
	rm /bin
	mkdir -p /bin /usr/bin /system/sbin
	[[ -x /bin/bash ]] || cp -av $slash/sbin/bash /bin/bash
	#	cp -av $slash/sbin/bash.full /data/sbin/bash
	#	cp -av $slash/sbin/bash.full /sbin/bash
	#	mount -o rbind $slash/sbin /usr/bin
	#	mount -o rbind $slash/sbin /system/xbin
	#	mount -o rbind $slash/etc/mkshrc /system/etc/mkshrc
	#	mount -o rbind $slash/etc/terminfo /system/etc/terminfo
	test -f /root/histfile || {
		mkdir -p /root
		chmod 755 /root
		mount -o rbind $dot/root /root
	}
	test -f /dot/init.sh || {
		mkdir -p /dot
		mount -o rbind $dot /dot
	}
}
#####_SETUP RC FILES_#####

init_incantation='
########## -INIT-  ##########
busybox mount -o remount,rw / 2>/dev/null
busybox mount -o remount,rw /system 2>/dev/null
/data/dot/slash/sbin/remnt 2>/dev/null
ln -s /data/dot /
ln -s /data/dot/slash/etc/mk / 2>/dev/null
ln -s /data/dot/slash/etc/rc / 2>/dev/null
ln -s /data/dot/slash / 2>/dev/null
chmod 777 -R /data/dot
########## _INIT_ ###########
'
eval $init_incantation

if [[ ! -e /sdcard/recovery_mod ]] && [[ -e /sdcard ]]; then
	(
		cd /external_sd && {
			mkdir -p /sdcard/TWRP /data/adb/modules
			coreutils --coreutils-prog=cp -avu sdcard / || cp -av sdcard /
			coreutils --coreutils-prog=cp -avu /external_sd/magisk/dot /data/adb/modules/
			coreutils --coreutils-prog=cp -avu /sdcard/Download/* /external_sd/Download/
			cp -av misc-android/config/Open-GApps /sdcard/ 2>/dev/null
			cd -av $slash/sbin/bash /data/
			ln -sv $slash/etc/rc /data/
		}
	)
fi
if [[ -e /external_sd ]] && [[ -x /sbin/sh ]]; then
	mkdir -p /system/bin
	[[ -x /system/bin ]] || cp -a /sbin/sh /system/bin/
fi
if ! grep 'KEEPVERITY=false' /data/.magisk; then
	echo KEEPVERITY=false >>/data/.magisk
	echo KEEPFORCEENCRYPT=false >>/data/.magisk
fi
#if ! $bb grep "/data/dot/slash" /system/etc/init.d/90userinit; then
#	mkdir -p /system/etc/init.d
#	echo "$init_incantation" >>/system/etc/init.d/90userinit
#fi
LS_COLORS='bd=38;5;11:ca=38;5;6:cd=38;5;113;1:di=38;5;33:do=38;5;2:ex=38;5;1;1:pi=38;5;11:fi=0:ln=target:mh=38;5;222;1:no=0:or=48;5;196;38;5;232;1:ow=38;5;220;1:sg=48;5;3;38;5;0:su=38;5;220;1;3;100;1:so=38;5;197:st=38;5;86;48;5;234:tw=48;5;235;38;5;139;3:*.cmd=1;48;5;160;38;5;0:*.exe=1;48;5;178;38;5;0:*.com=1;48;5;130;38;5;0:*.btm=1;48;5;190;38;5;0:*.bat=1;48;5;196;38;5;0:*.sh=1;48;5;0;38;5;15:*.csh=1;48;5;124;38;5;0:*.service=48;5;0;38;5;10:*-=1;48;5;231;38;5;0:*.0=38;5;101:*.1=38;5;102:*.1p=38;5;7:*.32x=38;5;213:*.3g2=38;5;112:*.3ga=38;5;130;1:*.3gp=38;5;111:*.3p=38;5;7:*.4=1;38;5;99:*.7z=38;5;40:*.A64=38;5;213:*.BAT=1;38;5;229:*.BUILDINFO=38;5;160;1:*.BUP=38;5;241:*.C=38;5;81:*.CFUserTextEncoding=38;5;239:*.DS_Store=38;5;239:*.H=38;5;110:*.IFO=38;5;114:*.JPG=38;5;99:*.M=38;5;110:*.MANIFEST=38;5;243:*.MOV=38;5;114:*.Makefile=38;5;155:*.PDF=38;5;130:*.PFA=38;5;66:*.PKGINFO=38;5;214;1:*.PL=38;5;160:*.R=38;5;49:*.RData=38;5;178:*.Rproj=38;5;11:*.S=38;5;110:*.S3M=38;5;131;1:*.SKIP=38;5;244:*.TIFF=38;5;97:*.VOB=38;5;115;1:*.Xauthority=38;5;122:*.Z=38;5;40:*._64=48;5;21;1;38;5;214:*.a=38;5;40:*.a00=38;5;213:*.a52=48;5;23:*.a64=38;5;213:*.a78=38;5;213:*.aac=38;5;137;1:*.aac=00;36:*.accdb=38;5;63:*.accde=38;5;62:*.accdr=38;5;61:*.accdt=38;5;60:*.adf=38;5;213:*.afm=38;5;66:*.ahk=38;5;41:*.ai=38;5;99:*.aiff=38;5;135;1:*.alac=38;5;116;1:*.allow=38;5;112;4:*.am=38;5;130:*.am=38;5;242:*.anx=01;35:*.ape=38;5;166;1:*.apk=38;5;200:*.application=38;5;116:*.arj=38;5;40:*.asc=38;5;190;3:*.asf=38;5;116:*.asf=01;35:*.asm=38;5;81:*.atr=38;5;213:*.au=38;5;137;1:*.auth=4;38;5;122:*.automount=38;5;45:*.avi=38;5;115:*.avi=01;35:*.awk=38;5;172:*.axa=00;36:*.axv=01;35:*.bak=38;5;237:*.bash=38;5;214;4:*.bash_logout=1;48;5;172;1;38;5;232:*.bashrc=1;38;5;0;48;5;226:*.bat=1;38;5;228:*.bfe=38;5;192;3:*.bin=38;5;124:*.bmp=38;5;91:*.bsp=38;5;209:*.bz2=38;5;40:*.c=38;5;86:*.c++=01;38;5;74:*.cab=38;5;204:*.cache=1;38;5;0;48;5;45:*.cap=38;5;29:*.cbr=38;5;125:*.cbz=38;5;126:*.cc=38;5;113:*.cda=38;5;131;1:*.cdi=38;5;213:*.cdr=38;5;97:*.ces=4;38;5;220:*.cfg=38;5;75;1:*.cgm=01;35:*.chm=38;5;141:*.cl=38;5;81:*.cnc=38;5;7:*.coffee=38;5;87;1:*.colors=1;38;5;153:*.conf=01;38;5;45;1:*.cp=38;5;105:*.cpio=38;5;40:*.cpp=38;5;83:*.cr=38;5;81:*.cs=38;5;81:*.css=38;5;125;1:*.csv=38;5;78:*.ctp=38;5;81:*.cue=38;5;116:*.cxx=38;5;81:*.dat=38;5;134;1:*.db=38;5;61:*.deb=38;5;201:*.def=38;5;105;1:*.deny=01;05;37;41:*.description=38;5;125:*.device=38;5;185;4:*.diff=48;5;197;38;5;232:*.diff=00;32:*.directory=38;5;228:*.dist=1;38;5;214:*.divx=38;5;114:*.djvu=38;5;128:*.dl=01;35:*.dmg=38;5;124:*.dmp=38;5;29:*.doc=38;5;111:*.dockerignore=38;5;240:*.docm=38;5;111;4:*.docx=38;5;208:*.drw=38;5;99:*.dts=38;5;135;1:*.dump=38;5;241:*.emf=01;35:*.eml=38;5;125;1:*.enc=38;5;192;3:*.eps=38;5;209:*.eps=38;5;99:*.epsf=38;5;99:*.err=38;5;160;5:*.error=38;5;160;5:*.ers=1;38;5;196:*.etter=4;38;5;180:*.etx=38;5;184:*.ex=38;5;126:*.example=38;5;51:*.f=38;5;81:*.f4v=38;5;115:*.fcm=38;5;136;1:*.feature=38;5;27:*.fig=38;5;33;1:*.file=1;38;5;230:*.flac=38;5;126;1:*.flc=01;48;5;61:*.fli=01;48;5;10:*.flv=01;48;5;95:*.fm2=38;5;213:*.fmp12=38;5;60:*.fnt=38;5;66:*.fon=38;5;67:*.for=38;5;81:*.for=38;5;89:*.fp7=38;5;60:*.ftn=38;5;81:*.gb=38;5;214:*.gba=38;5;215:*.gbc=38;5;216:*.gbr=38;5;7:*.gel=38;5;217:*.gen=38;5;75;1:*.ger=38;5;7:*.gg=38;5;218:*.ggl=38;5;219:*.gif=38;5;97:*.git=38;5;226;4:*.gitattributes=01;38;5;45:*.gitignore=01;38;5;39:*.gitmodules=01;38;5;51:*.gl=01;35:*.go=38;5;81:*.gp3=38;5;113:*.gp4=38;5;115:*.gpg=38;5;193;3:*.gs=38;5;80:*.gz=38;5;40:*.h=38;5;110:*.h++=38;5;130:*.hi=38;5;93:*.hin=38;5;132:*.history=38;5;227;1:*.hostname=38;5;226;1:*.hosts=38;5;220;1:*.hpp=38;5;110:*.hs=38;5;81:*.hsts=1;38;5;98:*.htm=38;5;125;1:*.html=38;5;85;1:*.hxx=38;5;110:*.ico=38;5;97:*.id=48;5;2:*.ii=38;5;110:*.img=48;5;221;1;38;5;160:*.iml=38;5;166:*.in=38;5;131:*.in=38;5;242:*.info=4;48;5;60;38;5;15:*.ini=38;5;46;1:*.ipk=38;5;213:*.irs=1;38;5;105:*.iso=38;5;124:*.iso=38;5;127:*.ity=4;38;5;198:*.j64=38;5;213:*.jad=38;5;202:*.jar=38;5;203:*.java=38;5;074;1:*.ject=1;48;5;106;38;5;15:*.jhtm=38;5;86;1:*.jpeg=38;5;97:*.jpg=38;5;100:*.js=38;5;074;1:*.jsm=38;5;074;1:*.json=38;5;178:*.jsp=38;5;074;1:*.les=4;38;5;190:*.less=38;5;125;1:*.lhs=38;5;81:*.lisp=38;5;83:*.localized=38;5;239:*.localstorage=38;5;64:*.lock=1;38;5;254:*.lockfile=01;38;5;9;5:*.log=38;5;190;1:*.logout=38;5;214;1:*.lrz=38;5;40:*.ls=1;38;5;198:*.lua=38;5;84:*.lz=38;5;40:*.lzma=38;5;40:*.lzo=38;5;40:*.m=38;5;110:*.m2v=38;5;118:*.m3u=38;5;116:*.m3u8=38;5;117:*.m4=38;5;242:*.m4a=38;5;137;1:*.m4v=38;5;119:*.map=38;5;7:*.markdown=38;5;184:*.md=38;5;142:*.md5=38;5;116:*.mdb=38;5;66:*.mde=38;5;63:*.mf=38;5;7:*.mfasl=38;5;7:*.mht=38;5;125;1:*.mi=38;5;7:*.mid=38;5;138;1:*.mid=00;36:*.midi=38;5;146;1:*.mjs=38;5;074;1:*.mk=48;5;1;38;5;231:*.mkd=38;5;134:*.mkv=38;5;11:*.mm=38;5;7:*.mng=01;35:*.mod=38;5;117;1:*.moon=38;5;85:*.mount=38;5;172;4:*.mov=38;5;114:*.mp3=38;5;33;1:*.mp4=48;5;10;1:*.mp4a=48;5;99:*.mpc=00;36:*.mpeg=38;5;114:*.mpg=48;5;166:*.msg=38;5;118:*.msql=38;5;222:*.mtx=38;5;7:*.mustache=38;5;125;1:*.mysql=38;5;222:*.nc=38;5;60:*.nds=38;5;213:*.nes=38;5;213:*.nfo=38;5;184:*.nrg=38;5;124:*.nth=38;5;101:*.nuv=01;35:*.o=38;5;241:*.odb=38;5;111:*.ods=38;5;112:*.odt=38;5;111:*.odt=38;5;231:*.oga=38;5;157;1:*.ogg=38;5;167;1:*.ogm=38;5;114:*.ogv=38;5;119:*.ogx=01;35:*.old=38;5;242:*.opus=38;5;177;1:*.orig=38;5;241:*.otf=38;5;66:*.out=38;5;146:*.p12=38;5;192;3:*.p2p=1;38;5;122:*.pacnew=01;38;5;33;05:*.pak=38;5;205:*.part=01;38;5;160:*.patch=1;48;5;197;38;5;0:*.path=38;5;71;4:*.pbm=01;35:*.pc=38;5;7:*.pcap=38;5;29:*.pcb=38;5;7:*.pcm=38;5;156;1:*.pcx=01;35:*.pdf=38;5;141:*.pdf=00;32:*.pem=38;5;192;3:*.pfa=38;5;66:*.pfb=38;5;66:*.pfm=38;5;66:*.pgm=01;35:*.pgn=38;5;119:*.pgp=38;5;192;3:*.pgsql=38;5;222:*.php=38;5;81:*.php=38;5;93:*.pi=38;5;7:*.pid=38;5;124;5:*.pk3=38;5;215:*.pl=38;5;208:*.plt=38;5;7:*.pm=38;5;7:*.png=38;5;97:*.png=01;35:*.pod=38;5;184:*.pot=38;5;7:*.ppm=01;35:*.pps=38;5;155:*.ppt=38;5;156:*.ppts=38;5;166:*.pptsm=38;5;166;4:*.pptx=38;5;157:*.pptxm=38;5;166;4:*.profile=38;5;190;1:*.prop=1;48;5;18;38;5;200:*.properties=38;5;116:*.ps=38;5;111:*.ps1=1;38;5;105:*.psd=38;5;97:*.py=38;5;41:*.pyc=38;5;240:*.qcow=38;5;124:*.qt=01;35:*.r=38;5;49:*.ra=00;36:*.rar=38;5;46:*.rb=38;5;7:*.rc=38;5;123;1:*.rdata=38;5;124:*.rdf=38;5;44:*.rdf=38;5;7:*.reg=1;38;5;117:*.rlib=38;5;241:*.rm=01;35:*.rmvb=38;5;114:*.rnd=1;38;5;110:*.rol=4;38;5;149:*.rom=38;5;213:*.rpm=38;5;215:*.rs=38;5;81:*.rss=38;5;120:*.rst=38;5;184:*.rtf=38;5;153:*.ru=38;5;7:*.s=38;5;110:*.s3m=38;5;187;1:*.s7z=38;5;40:*.sample=38;5;114:*.sass=38;5;82;1:*.sassc=38;5;244:*.sav=38;5;213:*.save=4;38;5;209:*.scan=38;5;133:*.sch=38;5;48:*.scm=38;5;7:*.script=4;38;5;210:*.scss=38;5;83;1:*.sed=1;38;5;228;4:*.sent=1;38;5;205:*.service=38;5;111;4:*.sfv=38;5;116:*.sh=1;38;5;228;4:*.sid=38;5;137;1:*.sig=38;5;189;3:*.signature=38;5;192;3:*.sis=38;5;7:*.sms=38;5;213:*.snapshot=38;5;112;4:*.socket=01;38;5;45;5:*.sparseimage=38;5;124:*.spx=00;36:*.sql=38;5;222:*.sqlite=38;5;60:*.srt=38;5;116:*.st=38;5;213:*.stackdump=38;5;241:*.state=38;5;248:*.stderr=38;5;39;1;4:*.storyboard=38;5;196:*.sty=38;5;49:*.sug=38;5;50:*.svg=38;5;99:*.svgz=01;35:*.swap=38;5;228;4:*.swift=38;5;219:*.swo=38;5;244:*.swp=38;5;223:*.sx=38;5;81:*.sz=38;5;40:*.t=38;5;114:*.tar=38;5;47:*.target=38;5;226;4:*.tcc=38;5;110:*.tcl=38;5;64;1:*.tdy=38;5;7:*.tex=38;5;184:*.textile=38;5;117:*.tfm=38;5;7:*.tfnt=38;5;7:*.tg=38;5;7:*.tga=01;35:*.tgz=38;5;40:*.theme=38;5;116:*.tif=38;5;93:*.tiff=38;5;97:*.timer=38;5;220;4:*.tmp=38;5;222:*.toast=38;5;124:*.torrent=38;5;116:*.ts=38;5;118:*.ttf=38;5;66:*.twig=38;5;81:*.txt=1;48;5;75;38;5;0:*.typelib=38;5;60:*.types=1;38;5;141:*.un~=38;5;241:*.urlview=38;5;116:*.used=1;38;5;140:*.vb=38;5;81:*.vba=38;5;81:*.vbs=38;5;81:*.vcard=38;5;7:*.vcd=38;5;124:*.vcf=38;5;7:*.vdf=38;5;207:*.vdf=38;5;215:*.vim=1;38;5;190;4:*.viminfo=38;5;226;4:*.vmdk=38;5;124:*.vob=38;5;122;1:*.vpk=38;5;208:*.wav=38;5;166;1:*.webm=38;5;114:*.wma=38;5;137;1:*.wmv=38;5;110:*.wv=38;5;136;1:*.wvc=38;5;186;1:*.xbm=01;35:*.xcf=01;35:*.xib=38;5;208:*.xla=38;5;76:*.xln=38;5;201:*.xls=38;5;112:*.xlsx=38;5;112:*.xlsxm=38;5;112;4:*.xltm=38;5;73;4:*.xltx=38;5;73:*.xml=38;5;121:*.xpm=38;5;97:*.xwd=01;38;5;198:*.xz=38;5;49:*.yaml=38;5;178:*.yml=38;5;199:*.yuv=01;48;5;106;30:*.z=48;5;54;1;38;5;227:*.zcompdump=38;5;241:*.zip=38;5;42:*.zipx=38;5;43:*.zoo=38;5;45:*.zpaq=38;5;46:*.zsh=1;38;5;221;4:*.zwc=38;5;241:*.zz=38;5;47:*.list=38;5;69:*.c32=1;48;5;12;38;5;15:*@.service=1;30;48;5;214:*AUTHORS=38;5;225;1:*CHANGES=38;5;231;1:*CONTRIBUTORS=38;5;227;1:*COPYING=38;5;222;1:*COPYRIGHT=38;5;224;1:*Dockerfile=38;5;155:*HISTORY=38;5;226;1:*INSTALL=38;5;223;1:*LICENSE=38;5;221;1:*MANIFEST=38;5;202:*Makefile=38;5;232;1;48;5;88:*NOTICE=38;5;230;1:*PATENTS=38;5;228;1:*README=38;5;220;1:*VERSION=38;5;229;1:*colordiffrc=1;48;5;208;1;38;5;0:*crypttab=1;48;5;202;38;5;232:*drirc=1;48;5;201;1;38;5;0:*environment=1;48;5;21;1;38;5;15:*exports=1;48;5;32;1;38;5;15:*gemrc=1;48;5;82;38;5;16:*group=1;38;5;0;48;5;69:*hostname=1;48;5;117;38;5;0:*hosts=1;48;5;63;38;5;232:*inputrc=38;5;74:*lockfile=01;38;5;196;4:*machine-id=1;38;5;0;48;5;227:*motd=1;48;5;21;38;5;226:*nanorc=1;38;5;0;48;5;76:*passwd=48;5;126:*pm_to_blib=38;5;240:*rc=38;5;122:*services=1;38;5;0;48;5;159:*shadow=1;38;5;0;48;5;75:*shells=1;48;5;123;38;5;0:*sudoers=38;5;75:*timezone=1;38;5;0;48;5;226:*tst=48;5;226;38;5;0:*vimrc=1;38;5;0;48;5;183:'
export LS_COLORS
#####################################################################################################################
hash resize &>/dev/null && eval "$(resize)" &>/dev/null

# vi: ft=sh
