#case $- in
#	*i*) ;;
#	*) exit 0 ;;
#esac

#[[ $PS1 ]] || return 0

#shopt &>/dev/null || return 2


export lux=/mnt/media_rw/c68dcfb1-c438-4f9f-8109-7ce175ca99a3
export dot=/data/dot
export slash=$dot/slash
export dot_dir=$dot LANG='en_US.UTF-8'
export pc=192.168.0.20 s4=192.168.0.8 tv=192.168.0.5
export PATH="/su/xbin:/su/bin:/supersu:/su:/data/adb/su/xbin:/data/adb/su/bin:${slash}/sbin:/system/xbin:/sbin:/system/bin:/vendor/bin:/data/local/bin:/data/local/xbin:/data/adb/xbin:/data/adb/bin:/system/sbin:${PATH}:$slash/sbin:$dot/bin:$dot/bin/final:$dot"
result=":"
IFS=:
for p in $PATH; do
	[[ $result == *:"$p":* ]] || result="${result}${p}:"
done
result="${result#:}" PATH=$(echo "${result%:}")
unset IFS
export ANDROID_DATA=/data ANDROID_ROOT=/system
if shopt &>/dev/null; then
	for set_plus in noclobber notify monitor histexpand; do set +o "$set_plus"; done
	for set_minus in ignoreeof hashall pipefail emacs interactive-comments; do set -o "$set_minus"; done
	for shopt_opt in gnu_errfmt lastpipe direxpand autocd cdable_vars cdspell checkwinsize checkhash cmdhist dirspell extglob globstar histappend histreedit histverify hostcomplete huponexit interactive_comments mailwarn nocaseglob nocasematch no_empty_cmd_completion nullglob progcomp promptvars sourcepath execfail lithist; do
		builtin shopt -s "$shopt_opt" &>/dev/null
	done
	unset shopt_opt set_minus set_plus
fi

bb=$(command -v busybox 2>/dev/null) || bb="commmand -v "
export bb

bb() { command \\"$bb" "$@"; }


#for i in /ex $(echo /mnt/media_rw/????-????) $(echo /storage/????-????) /external_sd; do
#	[[ -e $i/misc-android ]] || continue
#	export ex=$i
#done
ex=/sdcard

echo /init.* | grep amlogic && export HOSTNAME=TV
{ echo /* | grep exyn &>/dev/null || grep zeroflte /default.prop ; } && export HOSTNAME=S6
[[ $HOSTNAME ]] || { getprop ro.product.device && export HOSTNAME="$(getprop ro.product.device)"; }
[[ -d $dot/root ]] && HOME=$dot/root
#[[ -e $HOME ]] || HOME=$ex
[[ -e $HOME ]] || HOME=/sdcard

[[ -e /etc/terminfo ]] && TERMINFO=/etc/terminfo
[[ -e $slash/etc/terminfo ]] && TERMINFO=$slash/etc/terminfo
[[ -e /sbin/terminfo ]] && TERMINFO=/sbin/terminfo
[[ -e $TERMINFO ]] && export TERMINFO TERM=screen-256color
#export TERM=xterm-256color


[[ -x $BASH ]] || export BASH=/data/dot/slash/sbin/bash
[[ -x $BASH ]] || BASH=$(command -v bash)
[[ -x $BASH ]] || [[ -x $lux/usr/bin/bash ]] && export BASH=$lux/usr/bin/bash

mkdir -p /tmp
[[ -d /data/local/tmp ]] && TMP=/data/local/tmp
[[ -d /tmp ]] && TMP=/tmp

#[[ $USER ]] || USER=$(whoami 2 &>/dev/null) || USER=$(logname 2 &>/dev/null)

[[ -x $slash/sbin/nano ]] && export EDITOR="$slash/sbin/nano" VISUAL="$EDITOR"
[[ HOSTNAME == PC ]] && lux=/data/lux

boot="$(find /dev/block -iname boot | tail -1 )"
recovery="$(find /dev/block -iname recovery | tail -1)"

export TMP TMPDIR=$TMP BASH SHELL=$BASH HISTFILE="${dot}/root/histfile_android" HISTSIZE=50000 USER slash
test $HOSTNAME && hostname $HOSTNAME
alias e='. $dot/bin/e'
cmdcompile() {
	cmd package compile -a -m everything
	fstrim /system; 
fstrim /data;
fstrim /cache
}

hash remnt &>/dev/null && remnt

unalias src 2>/dev/null

pminstall() {
	[[ $1 ]] || command \ls *.apk
	for apk; do
		ANLO "Installing $apk ...\n"
		pm install --user 0 -r -g "$apk"
	done
}

unalias ls &>/dev/null
if cp --help 2>&1 | grep -o "\-c" ; then alias cp='cp -c ';fi
unset ls LS_OPTIONS &>/dev/null
if [[ -e $slash/sbin/ls ]]; then
    LS_BIN="$slash/sbin/ls"
    elif [[ -e /system/xbin/ls ]]; then
    LS_BIN="$slash/sbin/ls"
    else
    LS_BIN="ls"
fi

if $LS_BIN --help 2>&1 | grep 'Z' ; then LS_OPTIONS=' -Z '; fi
if $LS_BIN --help 2>&1 | grep 'group-directories-first' ; then
	export LS_OPTIONS="$LS_OPTIONS --group-directories-first "
fi
export LS_OPTIONS="$LS_OPTIONS -AHhpFl --color "

ls() { "$LS_BIN" $LS_OPTIONS "$@"; }
if echo $0 | grep bash ; then
	if [[ ${EUID} == 0 ]]; then
		PS1='\[\033[01;31m\]\h\[\033[01;34m\] \w \$\[\033[00m\] '
	else
		PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] '
	fi
fi

remnt

#Check busybox validity and correct.
if ! busybox | grep '1.29.2' ; then
	echo "Setup a newer busybox..."
		cd $slash
		bash ./Busybox-installer-arm.bin
fi

[[ -e /system/bin/logd ]] && mv /system/bin/logd /system/bin/logd.bak

[[ -d $ex ]] && rm_empty_dir /sdcard/* $ex/*

for bin_dir in /system/bin /system/xbin; do
	for fix_bb in su bash; do
		bin_bb="$bin_dir/$fix_bb"

		if [[ -L $bin_bb ]]; then
			echo "$bin_bb found delete?"

			mv -v "$bin_bb" "${bin_bb}.back" && echo "Renamed $bin_bb ${bin_bb}.back..."
		fi
	done
done
#####_MISC_MAINTENANCE_#####
[[ -e /system/bin/logd ]] && mv /system/bin/logd /system/bin/logd.bak


#####_SETUP RC FILES_#####

init_incantation='
########## -INIT-  ##########
busybox mount -o remount,rw / 2>/dev/null
busybox mount -o remount,rw /system 2>/dev/null
/data/dot/slash/sbin/remnt 2>/dev/null
ln -s /data/dot /
ln -s /data/dot/slash/etc/mk / 2>/dev/null
ln -s /data/dot/slash/etc/rc / 2>/dev/null
ln -s /data/dot/slash / 2>/dev/null
chmod 777 -R /data/dot
########## _INIT_ ###########
'

if ! grep "/data/dot/slash" /system/etc/init.d/90userinit; then
	echo "$init_incantation" >>/system/etc/init.d/90userinit
fi
#####################################################################################################################
hash resize &>/dev/null && eval $(resize) &>/dev/null

# vi: ft=sh
unalias nano 2>/dev/null

