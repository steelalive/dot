#!/bin/bash
__extract() {
	[ ! -f "$1" ] && echo "ERROR: $1 is not a valid file!" >&2 && return 0

	local dir="${1%.*}"

	mkdir "$dir"

	case "$1" in

	*.tar | *.tar.*)
		# if the archive is already in a top directory, strip-components will
		# get the contents of the directory only
		tar -xf "$1" -C "$dir" --strip-components=1
		;;
	*.tbz2)
		tar xvjf "$1" -C "$dir" --strip-components=1
		;;
	*.tgz)
		tar xvzf "$1" -C "$dir" --strip-components=1
		;;

	*.7z) 7z x "$1" "$dir" ;;
	*.bz2) bunzip2 "$1" "$dir" ;;
	*.gz) gunzip "$1" "$dir" ;;
	*.rar) rar x "$1" "$dir" ;;
	*.Z) uncompress "$1" "$dir" ;;
	*.zip) unzip "$1" -d "$dir" ;;

	*)
		echo "ERROR: Filetype not recognized for '$1'" >&2
		return 1
		;;

	esac

	return 0
}

function extract() {
	if [ -f "$1" ]; then
		local filename=$(basename "$1")
		local foldername="${filename%%.*}"
		local fullpath=$(perl -e 'use Cwd "abs_path";print abs_path(shift)' "$1")
		local didfolderexist=false
		if [ -d "$foldername" ]; then
			didfolderexist=true
			read -p "$foldername already exists, do you want to overwrite it? (y/n) " -n 1
			echo
			if [[ $REPLY =~ ^[Nn]$ ]]; then
				return
			fi
		fi
		mkdir -p "$foldername" && cd "$foldername"
		case $1 in
		*.tar.bz2) tar xjf "$fullpath" ;;
		*.tar.gz) tar xzf "$fullpath" ;;
		*.tar.xz) tar Jxvf "$fullpath" ;;
		*.tar.Z) tar xzf "$fullpath" ;;
		*.tar) tar xf "$fullpath" ;;
		*.taz) tar xzf "$fullpath" ;;
		*.tb2) tar xjf "$fullpath" ;;
		*.tbz) tar xjf "$fullpath" ;;
		*.tbz2) tar xjf "$fullpath" ;;
		*.tgz) tar xzf "$fullpath" ;;
		*.txz) tar Jxvf "$fullpath" ;;
		*.bz2) bunzip2 "$1" "$fullpath" ;;
		*.Z) uncompress "$1" "$fullpath" ;;
		*.zip) unzip "$fullpath" ;;
		*) echo "'$1' cannot be extracted via extract()" && cd .. && ! $didfolderexist && rm -r "$foldername" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}
extract "$@"
