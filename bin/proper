#-*- coding: utf-8 -*-
#1#_SCRIPT_#1# - by: steelalive
#2#::.. Last edit: - Thu May 31 08:12:29 EDT 2018 - by: - steelalive - ..::## #_# - VERSION=0.0.7.3 - #_# #@#310518#@# #2#
#3#::..#####################_/dot/bin/propper_#######################..::#3#
# vi: set filetype=sh:

export cmd=' androidboot.selinux=permissive buildvariant=eng threadirqs nowatchdog fsck.repair=yes commit=30 errors=remount-ro rootfstype=ext4 raid=noautodetect plymouth.enable=0 smsc95xx.turbo_mode=N net.ifnames=0 noatime libahci.ignore_sss=1 cgroup_disable=memory sysrq_always_enabled'
export PATH=$PATH:/dot/bin:/dot/bin/final:/dot/slash/sbin
mount /system
mount /vendor
mount /nvdata
[[ -e /system/build.prop ]] && mount -o remount,rw /system
mount -o remount,rw /vendor
mount -o remount,rw /nvdata

for i in \
	$(find $sys -name default.prop) \
	$(find $sys -name prop.default) \
	$(find $sys -name build.prop) \
	build.prop default.prop prop.default "$@"; do
	[[ -r $i ]] || continue
	sed -e "s/^security.perf_harden=1$/security.perf_harden=0/" \
		-e "s/^ro.allow.mock.location=0$/ro.allow.mock.location=1/" \
		-e "s/^ro.debuggable=0$/ro.debuggable=1/" \
		-e "s/^ro.secure=1$/ro.secure=0/" \
		-e "s/^ro.adb.secure=1$/ro.adb.secure=0/" \
		-e "s/^ro.product.cpu.abilist64=.*/ro.product.cpu.abilist64=arm64-v8a/" \
		-e "s/^ro.product.cpu.abilist=armeabi-v7a,armeabi$/ro.product.cpu.abilist=arm64-v8a,armeabi-v7a,armeabi/" \
		-e "s/^ro.build.type=user$/ro.build.type=userdebug/" \
		-e "s|^ro.build.tags=release-keys$|ro.build.tags=test-keys|" \
		-e "s/=MM-dd-yyyy$/dd-MM-yyyy/" \
		-e "s/=en-US$/=en-CA/" \
		-e "s/^ro.product.locale=.*/ro.product.locale=en-CA/" \
		-e "s/=US$/=CA/" \
		-e "s|=q201$|=S912|" \
		-e "s|=q9377$|=S912|" \
		-e "s/=cortex-a7$/=cortex-a53/" \
		-i "$i" && ANBG "Edited ${i}${R}...\\n${R}"
done
[[ -e $sysroot/init ]] && cd $sysroot || { cd /system_root || cd /system; } && {
	rm -v etc
	ln -sv system/etc etc
	rm -v bin
	ln -sv system/bin bin
	rm -v product
	ln -sv system/product product
	mkdir -v tmp
	mkdir -v root
}
cat $dot/bin/build.prop >/data/local.prop

for i in $(find $system/priv-app -type f); do chmod -v 644 "$i"; done
for i in $(find $system/app -type f); do chmod -v 644 "$i"; done
for i in $(find $system/priv-app -type d); do chmod -v 755 "$i"; done
for i in $(find $system/app -type d); do chmod -v 755 "$i"; done

#for file in /nvdata/fstab* /vendor/etc/fstab.mt6765; do
#	sed -e "s|,encryptable=/dev/block/platform/bootdevice/by-name/metadata||" \
#		-e "s|,quota||" \
#		-e "s|,encryptable=userdata||" \
#		-i "$file"

#done
#[[ -e /vendor/etc/fstab.enableswap ]] && rm -v /vendor/etc/fstab.enableswap
#	-e "s/ro.secure=1$/ro.secure=0/" \
#-e "s/adb.secure=1/adb.secure=0/" \
#	-e "s/persist.sys.usb.config=.*/persist.sys.usb.config=adb/" \

#	-e "s/=verify-profile$/=everything/" \
#	-e "s/=speed$/=everything/" \
#for i in init.rc /init.rc ramdisk/init.rc output/initrd/init.rc; do

#	[[ -e $i ]] || continue
#	sed -e "s|write /proc/sys/kernel/sysrq 0|write /proc/sys/kernel/sysrq 1|" -i "$i"
#done

#to_edit=split_img/boot.img-cmdline
#if [[ -e $to_edit ]] && ! grep sysrq_always_enabled $to_edit; then
#	cmdline=${TMPDIR:-/tmp}/cmdline
#	sed 's/ buildvariant=user //' -i $to_edit
#	rm $cmdline 2>/dev/null
#	echo "$(<$to_edit)${cmd}" >>$cmdline
#	cat $cmdline >$to_edit
#i

#if [[ -e /system/system/etc/gps.conf ]]; then
#	sed -e "s|SUPL_HOST=NONE|SUPL_HOST=supl.google.com|" -i /system/etc/gps.conf
#fi
cp -av $slash/etc/gps.conf /vendor/etc/
cp -av $slash/etc/gps.conf $sys/etc/
chmod 644 /vendor/etc/gps.conf $sys/etc/gps.conf

#for fstab in fstab.amlogic ramdisk/fstab.amlogic initrd/fstab.amlogic ramdisk/fstab fstab ramdisk/fstab.qcom fstab.qcom; do
#	[[ -e $fstab ]] || continue
#	sed -e "s|barrier=1|barrier=0|" -e "s|discard|nodiscard|" -e "s|/dev/block/zram0.*|##|" -i "$fstab"
#done

#i=boot/bootimg.cfg
#[[ -e $i ]] && {
#	name="$(grep ro.build.fingerprint system/build.prop | cut -d= -f2)"
#	sed -e "s/bootsize = .*/bootsize =/" \
#		-e "s|name =.*|name = $name|" -i "$i"

#	sed -e "s|cmdline =.*|cmdline = $cmd|" -i "$i"
#}
pathfix() {
	[[ -e $1 ]] || return
	sed -e "s|export PATH.*|export PATH /sbin:/vendor/bin:/system/bin:/su/xbin:/system/xbin:/system/sbin:/su/bin:/su/xbin:/data/dot/slash/sbin:/data/dot/bin:/data/dot/bin/final:/data/dot/slash/etc|" -i $1
}
# /sbin/supersu/xbin:/sbin/supersu/bin:/data/adb/su/xbin:/data/adb/su/bin:/su/xbin:/su/bin:/system/xbin:/system/bin:/vendor/bin:/bin:/sbin:/system/sbin:/data/dot/bin:/data/dot/bin/final:/data/dot:/data/lux/usr/bin|" -i "$1"
# }
#for file in init.environ.rc ramdisk/init.environ.rc; do
#	[[ -r $file ]] || continue
#	if grep -q "export PATH" $file; then
#		pathfix $file
#	else
#		echo "export PATH" >>$file
#		pathfix $file
#	fi
#done
#for dir in /system/etc /system/system/etc /system/vendor/etc /system/system/vendor/etc /system/system /system; do
#	for files in bash.bash_logout bash.bashrc gps.conf group hosts mkshrc nanorc prop.default timezone fstab.mt6765 fstab.enableswap $(
#		cd $ex/rootdir/
#		echo **
#	); do
#		[[ -e $files ]] && chmod 644 "$files"
#		dirfile="$dir/$files"
#		[[ -e $dirfile ]] && chmod 644 "$dirfile"
#	done
#done

#if [[ ! -e /oem ]] && [[ $1 == boot ]]; then
#	for target in initrd/default.prop ramdisk/default.prop /default.prop /prop.default /system/prop.default default.prop $(find /system -name prop.default | head -n1) "$@"; do
#		string="PROPER"
#		[[ -r $target ]] || continue
#		#	grep -q "$string" "$build" && continue
#		prop-replace "$dot/bin/default.prop" "$string" "$target"
#	done
#fi

#for target in ramdisk/system/build.prop /system/system/build.prop /system/build.prop system/build.prop build.prop $(find /system -name build.prop | head -n1) "$@"; do
#	string='PROPER_SYS'
#	[[ -r $target ]] || continue
#	prop-replace "$dot/bin/build.prop" "$string" "$target" && ANG ""Prop values changed: ${W}$dot/bin/build.prop" "$string" "$target"${R}\\n"
#	#    ANY ""Proper NOT done.: ${W}$dot/bin/build.prop" "$string" "$target"${R}\\n"
#done
