#!/bin/bash

#-*- coding: utf-8 -*-
#2#::.. Last edit: - Wed May 30 08:24:14 EDT 2018 - by: - steelalive - ..::## #_# - VERSION=0.0.5.8 - #_# #@#300518#@# #2#
#3#::..#####################_MAIN_#######################..::#3#
# Author: #noharden

#wp check for wirelless porn. If there is still porn on the internet, we may continue.
wp || exit
ntponce
#I like the ccache to proudly display my name.
[[ -d $CCACHE_DIR ]] && +user -R $CCACHE_DIR $CCACHE_TEMPDIR 2>/dev/null

#Here, I update things.
pacman -Syu --noconfirm --needed || {
	ANBR "Error -Syu!$R\n"
	exit
}
suuser "yay -u --devel --needed --noconfirm"
suuser "yay --noconfirm"
paccache --keep 1 --verbose --remove
#That's it! We are done!

#Never EVER! execute updateall something.
[[ $1 ]] && {
	is_in_path go && go get -u all

	for i in /root/.gem/ruby/*/bin /root/.gem/ruby/*/ /root/.gem/ruby /root/.gem /root /root/.vim_runtime /ext/opt/diet/bin /ext/opt/diet /ext/opt /ext /ext/opt/gcc-UBERTC/bin; do
		[[ -e $i ]] && chmod go-w "$i"
	done

	for i in updateRuby update_rubygems update-pciids update-ca-trust update-desktop-database; do
		is_in_path "$i" && ANORANGE "Executing ${i}...\\n" && "$i"
	done
	### Back to relative sanity.

	#This take care of android-studio. I now have duplicated mountain of executables a little more ordered than android source.
	is_in_path sdkmanager && sdkmanager --update

	#When pacman is away, mice dances and maintain the latest of the late ruby code
	is_in_path bundle && bundle update

	### this line may not fit your config. All the previous lines as well.:
	[[ -d "$HOME"/.cache/pip ]] && chown root:root "$HOME"/.cache/pip "$HOME"/.cache/pip/http

	###This is supposed to save me HOURS if I chmod 777 /usr...
	mkdir -p $dot/info/package_lists_backup
	pacman -Q | awk '{print $1}' >$dot/packages.list
	cp --backup -av $dot/package.list $dot/info/package_lists_backup/

	#Permissions are taken care of
	rm -rf /tmp/makepkg

	###I don't know what the following one liners i grabbed on warez do...###

	#Not recommended pip maintenance, alwyas use the package manager...
	$(ncu -g | grep 'npm -g install ')
	$(pip-check -c pip2 -rfHu 2>/dev/null | grep -o "pip.* install -U .*")
	$(pip-check -c pip3 -rfHu 2>/dev/null | grep -o "pip.* install -U .*")

	#Same warning for npm
	npm install --global --upgrade npm@latest
	npm-check -g -y
	npm update -g
	npm doctor

	#Update the manual pages indez, or something else...
	mandb

	#Let's do the same mystake with perl scripts. Just use the damned package manager. pacman -Syu and have a baby or make passionate love to a man.
	if is_in_path cpanm && is_in_path cpanm-outdated; then
		cpanm --self-upgrade
		cpan-outdated -p | cpanm
	fi
	cpan -u

	if cd $dot/.dotfiles2; then
		make update
	fi
	setup-nvim space
	### Neovim setup ###
	###CHeck for mising files or disparities with pacman database
	paccheck | grep -v -e 'all dependencies satisfied' -e 'all files match database' -e "cw:" -e "memtest86+" -e "linux:" -e "system-config-printer"
	pacfixer() {
		prog=$(paccheck --list-broken | grep -v -e semver -e baloo -e "cw" -e "npm" -e "memtest86+" -e "linux" -e "system-config-printer" -e "htop" -e "discover" -e "gtop" -e "how2" | cut -d: -f1 | sort | uniq)
		for i in $prog; do
			suuser yay "$i"
			ANW "Program ${RED}$i ${W}need fixing\n"
		done
	}
	pacfixer "$@"
}
### END Neovim setup ###
