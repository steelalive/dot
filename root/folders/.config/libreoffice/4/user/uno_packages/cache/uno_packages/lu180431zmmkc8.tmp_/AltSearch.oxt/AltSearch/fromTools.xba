<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="fromTools" script:language="StarBasic">REM  *****  BASIC  *****

&apos; procedury použité ze standardní knihovny TOOLS - bez jejiho hledání
&apos; byly problémy tam, kde nebyla knihovna k dispozici  




Function getICUcomp as boolean
  &apos; ICU je od verze:
  &apos; Apache, OpenOffice 3.4.0
  &apos; LibreOffice  4.0
Dim oProdNameAccess as Object
Dim sVersion as String
Dim sProdName as String
dim pver()
dim OooVer as double

	oProdNameAccess = GetRegistryKeyContent(&quot;org.openoffice.Setup/Product&quot;)
	sProdName = oProdNameAccess.getByName(&quot;ooName&quot;)
	sVersion = oProdNameAccess.getByName(&quot;ooSetupVersion&quot;)
	GetProductName = sProdName &amp; &quot; &quot; &amp; sVersion
&apos;	msgbox  sProdName &amp; &quot;   &quot; &amp; sVersion
	&apos; OpenOffice  3.4.0
	&apos; LibreOffice  4.0

    pver() = ArrayOutOfString_(sVersion + &quot;.0&quot;, &quot;.&quot;)
    OooVer = val(pver(0)+&quot;.&quot;+pver(1))
	
    getICUcomp = false     
	if instr(sProdName,&quot;OpenOffice&quot;)&gt;0 then
	   if OooVer &gt;= 3.4 then  getICUcomp = true
	   
	elseIf instr(sProdName,&quot;LibreOffice&quot;)&gt;0 then
	   if OooVer &gt;= 4.0 then  getICUcomp = true
	   
	else  &apos; neznámý klon OOo
       &apos; zatím nechat starou konvenci     
	end if


  
end function



&apos; vrací řetezec klonu a číselné verze OOo
Function GetProductname_() as String
Dim oProdNameAccess as Object
Dim sVersion as String
Dim sProdName as String

	oProdNameAccess = GetRegistryKeyContent(&quot;org.openoffice.Setup/Product&quot;)
	sProdName = oProdNameAccess.getByName(&quot;ooName&quot;)
	sVersion = oProdNameAccess.getByName(&quot;ooSetupVersion&quot;)
	GetProductName_ = sProdName &amp; &quot;  &quot; &amp; sVersion
&apos;	msgbox  sProdName &amp; &quot;   &quot; &amp; sVersion
	&apos; OpenOffice  3.4.0
	&apos; LibreOffice  4.0
	
End Function




Function GetStarOfficeLocale_() as New com.sun.star.lang.Locale
Dim aLocLocale As New com.sun.star.lang.Locale
Dim sLocale as String
Dim sLocaleList(1)
Dim oMasterKey
	oMasterKey = GetRegistryKeyContent(&quot;org.openoffice.Setup/L10N/&quot;)
	sLocale = oMasterKey.getByName(&quot;ooLocale&quot;)
	sLocaleList() = ArrayoutofString_(sLocale, &quot;-&quot;)
	aLocLocale.Language = sLocaleList(0)
	If Ubound(sLocaleList()) &gt; 0 Then
		aLocLocale.Country = sLocaleList(1)
	End If
	GetStarOfficeLocale_() = aLocLocale
End Function



Function GetRegistryKeyContent(sKeyName as string, Optional bforUpdate as Boolean)
Dim oConfigProvider as Object
Dim aNodePath(0) as new com.sun.star.beans.PropertyValue
	oConfigProvider = createUnoService(&quot;com.sun.star.configuration.ConfigurationProvider&quot;)
	aNodePath(0).Name = &quot;nodepath&quot;
	aNodePath(0).Value = sKeyName
	If IsMissing(bForUpdate) Then
		GetRegistryKeyContent() = oConfigProvider.createInstanceWithArguments(&quot;com.sun.star.configuration.ConfigurationAccess&quot;, aNodePath())
	Else
		If bForUpdate Then
			GetRegistryKeyContent() = oConfigProvider.createInstanceWithArguments(&quot;com.sun.star.configuration.ConfigurationUpdateAccess&quot;, aNodePath())
		Else
			GetRegistryKeyContent() = oConfigProvider.createInstanceWithArguments(&quot;com.sun.star.configuration.ConfigurationAccess&quot;, aNodePath())
		End If
	End If
End Function




Function LoadDialog_(Libname as String, DialogName as String, Optional oLibContainer)
Dim oLib as Object
Dim oLibDialog as Object
Dim oRuntimeDialog as Object
	If IsMissing(oLibContainer ) then
		oLibContainer = DialogLibraries
	End If
	oLibContainer.LoadLibrary(LibName)
	oLib = oLibContainer.GetByName(Libname)
	oLibDialog = oLib.GetByName(DialogName)
	oRuntimeDialog = CreateUnoDialog(oLibDialog)
	LoadDialog_() = oRuntimeDialog
End Function





Function OpenDocument_(DocPath as String, Args(), Optional bDisposable as Boolean)
Dim oComponents as Object
Dim oComponent as Object
	&apos; Search if one of the active Components ist the one that you search for
	oComponents = StarDesktop.Components.CreateEnumeration
	While oComponents.HasmoreElements
		oComponent = oComponents.NextElement
		If hasUnoInterfaces(oComponent,&quot;com.sun.star.frame.XModel&quot;) then
			If UCase(oComponent.URL) = UCase(DocPath) then
				OpenDocument_() = oComponent
				If Not IsMissing(bDisposable) Then
					bDisposable = False
				End If
				Exit Function
			End If
		End If
	Wend
	If Not IsMissing(bDisposable) Then
		bDisposable = True
	End If
	OpenDocument_() = StarDesktop.LoadComponentFromURL(DocPath,&quot;_default&quot;,0,Args())
End Function




&apos; Retrieves an Array out of a String.
&apos; The fields of the Array are separated by the parameter &apos;Separator&apos;, that is contained
&apos; in the Array
&apos; The Array MaxLocindex delivers the highest Index of this Array
Function ArrayOutOfString_(BigString, Separator as String, Optional MaxIndex as integer)
Dim i%, OldPos%, Pos%, SepLen%, BigLen%
Dim CurUbound as Integer
Dim StartUbound as Integer
	StartUbound = 50
	Dim LocList(StartUbound) as String
	CurUbound = StartUbound	
	OldPos = 1
	i = -1
	SepLen = Len(Separator)
	BigLen = Len(BigString)
	Do
		Pos = Instr(OldPos,BigString, Separator)
		i = i + 1
		If Pos = 0 Then
			LocList(i) = Mid(BigString, OldPos, BigLen - OldPos + 1 )
		Else
			LocList(i) = Mid(BigString, OldPos, Pos-OldPos )
			OldPos = Pos + SepLen
		End If
		If i = CurUbound Then
			CurUbound = CurUbound + StartUbound
			ReDim Preserve LocList(CurUbound) as String
		End If
	Loop until Pos = 0
	If Not IsMissing(Maxindex) Then
		MaxIndex = i	
	End If
	If i &lt;&gt; -1 Then
		ReDim Preserve LocList(i) as String
	Else
		ReDim LocList() as String
	End If
	ArrayOutofString_ = LocList()
End Function




</script:module>