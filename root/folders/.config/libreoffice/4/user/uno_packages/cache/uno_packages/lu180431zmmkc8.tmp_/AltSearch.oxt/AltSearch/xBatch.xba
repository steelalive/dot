<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="xBatch" script:language="StarBasic">REM  *****  BASIC  *****
option explicit

public const scriptFile = &quot;AltSearchScript&quot;
public const scriptEditor = &quot;AltSearchEditor.ini&quot;  &apos; jmeno souboru ze ktereho se spuští shell pro editaci dávek 
Public const subTab = &quot;    &quot;  &apos; nahradit tabulátory mezerami

public cmd(20,1) as string  &apos; pole s příkazy pro interpretaci


dim oDia as object
dim bDiResult as byte




&apos;Testovací soubor pro ctení a zápis souboru v UTF-8
&apos; Nepoužito
Sub ReadEncodedText_UTF_8
Dim inFile, outFile As Object, sf As Object, inStream, outStream As Object
Dim aLineOfText As String, myFilePath As String

 myFilePath = convertToURL(&quot;C:\mytextFile.txt&quot;)
 sf = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
 On Error Goto fichierKO
 
 inStream = sf.openFileRead(myFilePath)
 
 inFile = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;)
 inFile.InputStream = inStream
 inFile.Encoding = &quot;UTF-8&quot;
 

 outStream = sf.openFileWrite(convertToURL(&quot;C:\mytextFileOut.txt&quot;)) 
 
 outFile = createUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
 outFile.OutputStream = outStream
 outFile.Encoding = &quot;UTF-8&quot;
&apos;xray outFile

 Do while not inFile.IsEOF
   aLineOfText = inFile.readLine
   outFile.writeString(aLineOfText+chr(13)+chr(10))
   MsgBox(aLineOfText)
 Loop

 outStream.closeInput
 outFile.closeOutput

 inStream.closeInput
 inFile.closeInput

 Exit Sub

FichierKO:
 Resume FichierKO2
 FichierKO2:
 On Error Resume Next
 MsgBox(&quot;File read error !&quot;, 16)
 outStream.closeInput
 outFile.closeOutput
 inStream.closeInput
 inFile.closeInput
End Sub




&apos; spustí ulozeny script 
Sub Bt_run(optional oEvt)
 dim sf, inStream, inFile

 dim radek$, prCmd$, prVal$, path$, hl0$, hl1$, jmeno as string
 dim kopiruj as boolean
 dim outPole(), comPole(), i, n as long  &apos; pole řádků s davkou ulozeni do souboru, pocet zaznamu
 dim poccmd  &apos; pocet příkazů v dávce
 dim transfer as boolean
 dim noSummary as boolean

 HledamDisp(true) &apos; nepristupne pri hledani

 transfer = false
 If (not IsMissing(oEvt)) then
     if (oEvt.source.model.tag=&quot;T&quot;) then transfer = true 
   end if
 
 on error goto problem
 &apos; nacist davku ze souboru do outpole()
 n = -1
 kopiruj = false
 jmeno = ucase(trim(replace_(LastName, chr(9), subTab))) &apos; zrusit pripadne mezery a tabulatory
 hl0 = ucase(cmd(0,0))+jmeno
 hl1 = ucase(cmd(0,1))+jmeno 
 
 path = userPath+scriptFile+&quot;.txt&quot;
 if not fileexists(Path) then goto problem 
 &apos; otevření vstupního souboru v UTF-8
 sf = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
 inStream = sf.openFileRead(path) 
 inFile = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;) 
 inFile.InputStream = inStream
 inFile.Encoding = &quot;UTF-8&quot; 

 Do While not inFile.IsEOF
    radek = inFile.readLine
    getCmdVal(radek, prCmd, prVal, true)    &apos; načist přikaz a text za přikazem
    prCmd = ucase(prCmd)
    prVal = trim(ucase(prVal))
   
    &apos; skoncit pokud je nalezen konec davky-skriptu
    if kopiruj and ((prCmd=ucase(cmd(0,0)))or(prCmd=ucase(cmd(0,1)))or(prCmd=ucase(cmd(5,0)))or(prCmd=ucase(cmd(5,1))))  then
        exit do &apos; konec davky
      end if
     
    &apos; pokud je nalezeno jmeno davky tak kopirovat 
    if (not kopiruj) and ( (prCmd+prVal=hl0)or(prCmd+prVal=hl1) ) then  
        kopiruj = true
      end if
     
    &apos; pridat do pole 
    if kopiruj and (prCmd&lt;&gt;&quot;&quot;) and ( not((prCmd=ucase(cmd(0,0)))or(prCmd=ucase(cmd(0,1))))  ) then
        &apos; pridat radek do vystupu
        n = n +1
        redim preserve outPole(n)  &apos; pridat prazdne zaznam do vystupniho pole
        outPole(n) = radek    
      end if 

  loop

 &apos; zavřít soubor
 inStream.closeInput
 inFile.closeInput
 
 BatReplCount = 0
 quitMode = false  &apos; nepotlačovat hlasení


 cursorinit(true) &apos; aktualizovat kurzory
 &apos; zpristupnit vsechny volby, aby se mohli nastavit zadane volby:
 with  oDial.model
  .Ch_case.enabled = true  &apos; zpristupnit
  .Ch_word.enabled = true  &apos; zpristupnit
  .Ch_styl.enabled = true  &apos; zpristupnit
  .Ch_reg.enabled = true  &apos; zpristupnit
  .Ch_csele.enabled = true  &apos; zpristupnit 
  .Ch_zpet.enabled = true  &apos; zpristupnit
 end with
 
 poccmd = 0
 &apos; všechny radky davky
 for n = 0 to ubound(outPole())
    if findcounter &lt; -99 then goto konec &apos; možnost prerusit davku a skončit
    getCmdVal(outPole(n), prCmd, prVal, false)    &apos; načist přikaz a text za přikazem    
&apos;      msgbox &quot;x&quot;+prVal+&quot;x&quot;
    select case ucase(prCmd)
       &apos; case ucase(cmd(1,0)), ucase(cmd(1,1)) Bug OOo 2.4 na linuxu: druhe pole Ucase(cmd(1,1)) se nevyhodnoti 
       &apos; =&gt; vse predeláno po jednom prikazu na case, zvlášt pro CZ a zvlást pro EN
      case ucase(cmd(1,0))&apos;,ucase(cmd(1,1))  &apos; Hledej
         oDial.model.Cb_find.text = prVal
      case ucase(cmd(1,1))  &apos; Find
         oDial.model.Cb_find.text = prVal      
      
      case ucase(cmd(2,0))&apos;,ucase(cmd(2,1)) &apos; Nahraď
         oDial.model.Cb_repl.text = prVal
      case ucase(cmd(2,1)) &apos; Replace
         oDial.model.Cb_repl.text = prVal
         
         
      case ucase(cmd(3,0))
        goto bugpar&apos; Parametry
      case ucase(cmd(3,1)) &apos; Parameters
        bugpar:
         &apos;zrušit nadbytečné mezery a tabulatory mezi prikazy
         prVal = replace_(prVal,chr(9), subTab)
         prVal = trim(prVal)
         while instr(prval, &quot;  &quot;)&gt; 0 
            prVal = replace_(prVal, &quot;  &quot;,&quot; &quot;)
          wend
         compole()=ArrayOutOfString_(prVal, &quot; &quot;)  &apos; načíst pole příkazu
         &apos; provest všechny příkazy nastven parametru hledaní
         with oDial.model
           .Ch_case.state = 0  :  .Ch_case.enabled = true
           .Ch_case.state = 0  :  .Ch_preservecap.enabled = true
           .Ch_word.state = 0  :  .Ch_word.enabled = true
           .Ch_styl.state = 0  :  .Ch_styl.enabled = true
           .Ch_reg.state = 0   :  .Ch_reg.enabled = true
           .Ch_csele.state = 0 :  .Ch_csele.enabled = true
           .Ch_zpet.state = 0  :  .Ch_zpet.enabled = true
           quitMode = false  &apos; nepotlačovat hlasení
           noSummary = false  &apos; bez souhrneho hlaseni o počtu zmen na konci
         
           for i = 0 to ubound(compole())
            select case ucase(comPole(i))
              case ucase(cmd(6,0)) &apos; Velikost
                 .Ch_case.state = 1
              case ucase(cmd(6,1)) &apos; Velikost
                 .Ch_case.state = 1

              case ucase(cmd(7,0)) &apos;  CelaSlova
                 .Ch_word.state = 1
              case ucase(cmd(7,1)) &apos;  CelaSlova
                 .Ch_word.state = 1

              case ucase(cmd(8,0)) &apos; StylyOdst
                 .Ch_styl.state = 1
              case ucase(cmd(8,1)) &apos; StylyOdst
                 .Ch_styl.state = 1

              case ucase(cmd(9,0)) &apos; Regularni
                 .Ch_reg.state = 1
              case ucase(cmd(9,1)) &apos; Regularni
                 .Ch_reg.state = 1

              case ucase(cmd(10,0)) &apos; SoucasnyVyber
                 .Ch_csele.state = 1 
              case  ucase(cmd(10,1)) &apos; SoucasnyVyber
                 .Ch_csele.state = 1 

              case ucase(cmd(11,0)) &apos; Pozpatku
                 .Ch_zpet.state = 1
              case  ucase(cmd(11,1)) &apos; Pozpatku
                 .Ch_zpet.state = 1

              case ucase(cmd(12,0)) &apos; BezHlaseni
                 quitMode = true  &apos;potlačit hlaseni
              case ucase(cmd(12,1)) &apos; BezHlaseni
                 quitMode = true  &apos;potlačit hlaseni

              case ucase(cmd(18,0)) &apos; BezSouhrnu
                 noSummary = true  &apos;potlačit souhrnne hlaseni na konci davky
              case ucase(cmd(18,1)) &apos; NoSummary
                 noSummary = true  

              case ucase(cmd(19,0)) &apos; Zachovat velikost písmen
                 .Ch_preservecap.state = 1
              case ucase(cmd(19,1)) &apos; 
                 .Ch_preservecap.state = 1


              case &quot;&quot;  &apos; prazny - nedelat nic


              case else
                &apos;Neznámý parametr:
                hlaseni1(64, true, false, &quot;Bt_run:  Unknown parameter:  &quot; &amp;  comPole(i)) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti
             end select
           next i
          end with
          
      
      case ucase(cmd(4,0)) 
        goto bugcmd &apos; Příkaz
      case ucase(cmd(4,1)) &apos; Příkaz
        bugcmd: 
         &apos; pokud je aktivováno přes tlačítko &quot;Přenést&quot; tak nic neprovádět
         if transfer then 
            poccmd = poccmd + 1 &apos; počítadlo příkazů v jedné dávce

          else 
           &apos;zrušit nadbytečné mezery a tabulatory mezi prikazy
           prVal = replace_(prVal,chr(9), subTab)
           prVal = trim(prVal)
           while instr(prval, &quot;  &quot;)&gt; 0 
              prVal = replace_(prVal, &quot;  &quot;,&quot; &quot;)
            wend
           compole()=ArrayOutOfString_(prVal, &quot; &quot;)  &apos; načíst pole příkazu
             &apos; provest všechny příkazy
             for i = 0 to ubound(compole())
              if findcounter &lt; -99 then goto konec &apos; -999 prerusit davku a skončit
              select case ucase(comPole(i))
                case ucase(cmd(13,0))&apos;, ucase(cmd(13,1)) &apos;Hledat 
                  BtFindNext
                case ucase(cmd(13,1)) &apos;Hledat 
                  BtFindNext

                case ucase(cmd(14,0))&apos;, ucase(cmd(14,1)) &apos; HledatVše 
                  BtFindAll
                case ucase(cmd(14,1)) &apos; HledatVše 
                  BtFindAll

                case ucase(cmd(15,0)) &apos;, ucase(cmd(15,1)) &apos; Nahradit
                  BtReplace
                case ucase(cmd(15,1)) &apos; Nahradit
                  BtReplace

                case ucase(cmd(16,0))&apos;, ucase(cmd(16,1)) &apos; NahraditVše
                  BtReplaceAll
                case ucase(cmd(16,1)) &apos; NahraditVše
                  BtReplaceAll

                case ucase(cmd(17,0))&apos;, ucase(cmd(17,1)) &apos; Spočítat
                  BtCount
                case ucase(cmd(17,1)) &apos; Spočítat
                  BtCount


                case &quot;&quot;  &apos; prazny - nedelat nic
                case else &apos; naznámý příkaz
                  hlaseni1(64, false, false, &quot;Bt_run:  Unknown command:  &quot; &amp;  comPole(i)) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti
               end select
             next i
       
           end if &apos; přenést 
      
      case else  
         &apos; Neznamý příkaz:  
         hlaseni1(64, false, false, &quot;Bt_run:  Unknown command:  &quot; &amp; prCmd) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti         
         
     end select


  next n  &apos; všechny radky davky
  
 &apos; nic nedelat, jen prenest parametry do polí hledat, nahradit... 
  if  transfer then
    &apos; prepnout do dialogu hledani
    Bt_swfind

    &apos; varovaní - Dávka obsahuje více navazujících skupin hledání a nahrazení. Přeneseny byly jen parametry poslední skupiny. 
    if poccmd &gt; 1 then hlaseni1(64, false, false, msg(35)) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti 
 
   else

konec:  &apos; vypsat hlaseni
   
    radek = replace_(msg(29),&quot;^^1&quot;,trim(lastName))
    radek = replace_(radek,&quot;^^2&quot;,cstr(BatReplCount))

    &apos; davka pro vice dokumentů
    if MultiFileBatchRun and (CountBatchSel = 0) then MultiFileBatchReport = &quot; &quot; + cr(1) + Lastname + cr(3) + ltrim(msg(31)) + cr(1) &apos; jmeno dávky a text &quot;Počet náhrad:&quot; 
    if MultiFileBatchRun then MultiFileBatchReport = MultiFileBatchReport + cr(1) + cstr(BatReplCount) + &quot;           &quot; + ListOfWFiles(CountBatch).Title
    
    &apos; davka ... skoncila, provedeno  ... záměn.
    if (not noSummary) and (not MultiFileBatchDisableMsg) then hlaseni1(64, false, false, radek) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti
    
   end if 

  quitMode = false  &apos; nepotlačovat hlasení
  ReplCount = 0
  batReplCount = 0

  HledamDisp(false) &apos; nepristupna tlacitka pri hledani  
 
 exit sub

problem:
 &apos; nemohu otevřít soubor...
 hlaseni1(48, false, false, &quot;Bt_run:  &quot; &amp; msg(26) &amp; chr(10) &amp; Path &amp; chr(10) &amp; &quot;l. &quot; &amp; erl &amp; &quot;:  &quot; &amp; Error$) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti          
 &apos; složitější obsluha chyb pro možnost zavření streamu a souborů 
 Resume problem1
 problem1:
 on error resume next
 inStream.closeInput
 inFile.closeInput
 goto konec
End Sub





&apos; uloží do nového nebo přidá k existujícímu záznamu
Sub Bt_save2
   SaveBatch(2)
End Sub


&apos; Otevře soubor s uloženými změnami pro upravy
Sub Bt_edit(oEvt)
 dim iNum as integer, path as string
 dim radek$, goFile$, pom$  
 dim errmisto
 dim outPole(), n


 &apos; pokud nexistuje uzivatelsky soubor s cestou k textovemu editoru tak zkopirovat vzor
 path = userPath+scriptEditor 
 on error goto problem

 if not fileexists(path) then zkopiruj(helpPath+scriptEditor, path)
 if not fileexists(path) then goto problem 

ZkusZnovu:
 errmisto = &quot;&quot;
 &apos; načíst soubor do pole
 n = -1
 iNum = Freefile
 Open path For Input As #iNum
 While not eof(#iNum)  &apos; cyklus pro všechny řádky
    Line Input #iNum, radek
    n = n +1
    redim preserve outPole(n)  &apos; pridat prazdne zaznam do vystupniho pole
    outPole(n) = radek
   wend &apos; cyklus pro všechny řádky
  Close #iNum
  
 errmisto = &quot;shell&quot;  &apos; idetifikator mista chyby
 shell  trim(outPole(0)), 1, &quot;&quot;&quot;&quot;+convertFromURL(userPath+scriptFile+&quot;.txt&quot;)+&quot;&quot;&quot;&quot; 
 exit sub 
  
problem: 
 
 if (errmisto = &quot;shell&quot;) then  &apos; soubor nenalezen
    pom = inputbox(msg(28),msg(11)+verze,outPole(0))       
    if pom = &quot;&quot; then exit sub
    outPole(0) = trim(pom)
    &apos; ulozit vystupni pole  
    Open path For Output As #iNum
    for n = 0 to ubound(outPole())
      Print #iNum, outPole(n)  
      next n 
    Close #iNum    
    resume ZkusZnovu
   else 
    hlaseni1(48, false, false, &quot;Bt_edit:  &quot; &amp; chr(10) &amp; msg(26) &amp; chr(10) &amp; path &amp; chr(10) &amp; &quot;l. &quot; &amp; erl &amp; &quot;:  &quot; &amp; Error$) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti             
   end if 
End Sub


&apos; aktualizuje seznam uložených skriptů
Sub Bt_refr
 &apos; načíst nový
 Refresch &apos; občerstvit seznam
End Sub


&apos; přepne do základního dialogu hledání
Sub Bt_swfind
    oDial.Model.Step = 1
End Sub


&apos; prepise po dvojkliku nebo enteru položku do výběrového pole Tf_name 
sub SelectItem(oEvt)
 Bt_run(oEvt)
end sub



sub ExistName(byval nam) as boolean
dim pom()
dim i as integer
 pom() = oDial.getControl(&quot;Lb_names&quot;).getItems()
 nam = trim(ucase(nam))
 For i = Lbound(pom()) to Ubound(pom())
	If nam = trim(ucase(pom(i))) Then
		ExistName = True
		Exit sub
	End if
  Next i
 ExistName = false
end sub




&apos; ulozi soucasne hodnoty Hledej, nahraď, parametry jako davku 
sub SaveBatch(no as byte)
dim pom  as string
&apos; xray oDial.getcontrol(&quot;Fr1&quot;).AccessibleContext.TitledBorderText
&apos; find = 
 if not IsBatchInit then initCmd &apos; pokud jeste neprobehla inicializace Batch modulu tak nacist prikazy

zmenit:
 pom = inputbox(oDial.getcontrol(&quot;Lb1&quot;).AccessibleContext.text+&quot;   &quot;+zkratitNa(oDial.model.Cb_find.text,58)+chr(10) _
               +oDial.getcontrol(&quot;T_repl&quot;).AccessibleContext.text+&quot;   &quot;+zkratitNa(oDial.model.Cb_repl.text,58)+chr(10) _
               +oDial.getcontrol(&quot;Fr1&quot;).AccessibleContext.TitledBorderText+zkratitNa(getOptionString,58) _
               +&quot;        &quot;+mid(cmd(4,lng),2, len(cmd(4,lng))-2)+&quot;:  &quot;+cmd(16,lng) , msg(27), iniBatch())
 
 if pom = &quot;&quot; then exit sub
 if ExistName(pom) then
     select case ChoiceDialog(replace_(msg(25),&quot;^^&quot;,pom))
       case 3  &apos; ulozit pod jiným jmenem
         goto zmenit

       case 2  &apos; Přidat na konec dávky 
         saveOptionToFile(2, pom, oDial.model.Cb_find.text, oDial.model.Cb_repl.text, getOptionString, cmd(16,lng))

       case 1 &apos; přepsat existujicí dávku 
         saveOptionToFile(1, pom, oDial.model.Cb_find.text, oDial.model.Cb_repl.text, getOptionString, cmd(16,lng))
     
     end select
 
   else
      saveOptionToFile(0, pom, oDial.model.Cb_find.text, oDial.model.Cb_repl.text, getOptionString, cmd(16,lng))
      
   end if
  
end sub


&apos; vraci řetezec nastavených vlastností
sub getOptionString as string
dim vysl as string
   vysl = &quot;  &quot; + Cmd(12,lng) + &quot;  &quot;
   if (oDial.model.Ch_case.state = 1)and(oDial.model.Ch_case.enabled) then vysl = vysl + Cmd(6,lng) + &quot;  &quot;
   if (oDial.model.Ch_word.state = 1)and(oDial.model.Ch_word.enabled) then vysl = vysl + Cmd(7,lng) + &quot;  &quot; 
   if (oDial.model.Ch_styl.state = 1)and(oDial.model.Ch_styl.enabled) then vysl = vysl + Cmd(8,lng) + &quot;  &quot;
   if (oDial.model.Ch_reg.state = 1) and(oDial.model.Ch_reg.enabled)  then vysl = vysl + Cmd(9,lng) + &quot;  &quot;
   &apos;v1.3
   if (oDial.model.Ch_preservecap.state = 1) and(oDial.model.Ch_preservecap.enabled)  then vysl = vysl + Cmd(19,lng) + &quot;  &quot;

   if (oDial.model.Ch_csele.state = 1)and(oDial.model.Ch_csele.enabled) then vysl = vysl + Cmd(10,lng) + &quot;  &quot;
   if (oDial.model.Ch_zpet.state = 1)and(oDial.model.Ch_zpet.enabled) then vysl = vysl + Cmd(11,lng) + &quot;  &quot;
   getOptionString = vysl
end  sub




&apos; dialog který se zeptá se zda přepsat = 1, nebo přidat = 2, cancel = 0 
sub ChoiceDialog(vyzva) as byte
  bDiResult = 0  &apos; predpoklada se esc, cancel 
&apos;  oDia = LoadDialog(&quot;AltSearch&quot;, &quot;D_choice&quot;)  &apos; kvůli lokalizaci preseunuto k inicializaci hlavniho dialogu
  oDia.model.Lb3.label = vyzva
  oDia.execute
  ChoiceDialog = bDiResult
end sub



&apos; vyhodnoceni tlacitek dialogu přepsaní/přidání
sub Bt_oDia(oEvt)
  select case oEvt.source.model.tag
    case &quot;R&quot; &apos; replace - prepsat
      bDiResult = 1
    case &quot;A&quot;  &apos; append - připojit
      bDiResult = 2
    case &quot;B&quot;  &apos; zpět - přejmenovat
      bDiResult = 3
    end select
  oDia.endexecute()
end sub



&apos; pokud je zapotrebi inicializuje modul Batch
&apos; vraci jmeno skriptu pro uložení
sub iniBatch as string
 if not IsBatchInit then  &apos; pokud jeste neprobehla inicializace Batch modulu tak ji provest
     IsBatchInit = true
     initCmd &apos; načíst příkazy
     &apos; po nove instalaci prekopirovat vzorovy soubor davek, jinak nic 
     if not fileexists(userPath+scriptFile+&quot;.txt&quot;) then 
         if fileexists(helpPath+scriptFile+&quot;_&quot;+language+&quot;.txt&quot;) then  &apos; pokud existuje národní tak zkopírovat
            zkopiruj(helpPath+scriptFile+&quot;_&quot;+language+&quot;.txt&quot;,userPath+scriptFile+&quot;.txt&quot;)
           else  
             &apos; zkopírovat alespoň anglický
             &apos; případné problémy s otevřením a kopirovanim anglického by mela řešit procedura Zkopiruj() 
             zkopiruj(helpPath+scriptFile+&quot;_en.txt&quot;,userPath+scriptFile+&quot;.txt&quot;)
             
           end if 
           
       end if
     Refresch &apos; občerstvit seznam
&apos;     xray oDial.model.Lb_names
      LastName=msg(24)
      &apos; nabidnout default jmeno:   
      iniBatch = LastName
    else
      iniBatch = LastName &apos; posledni pouzity nazev davky
    end if

end sub


&apos; naplní proměnnou LastName nazvu davky na kterém bylo kliknuto
sub lastNameSynchro(oEvt)
  lastName = oEvt.source.SelectedItem
end sub




&apos; zkopiruje zdroj do cile, ohlasi problem
&apos; nepoužito 
sub Zkopiruj0(zdroj, cil)
dim os
dim win1250$, iso8859_2$

  &apos; toto je zahadne - zjisteno experimentalne jen pro potřeby přenesení české diakritiky v linuxu 
  win1250 =  chr$(382)+chr$(378)+chr$(154)+chr$(138)+chr$(157)+chr$(141)+chr$(158)+chr$(142) &apos;ľĽšŠťŤžŽ&quot;

  &apos; kody jsou zadane jako mapovane do UNICODE
  iso8859_2 = chr$(318)+chr$(317)+chr$(353)+chr$(352)+chr$(357)+chr$(356)+chr$(382)+chr$(381)  

  on error goto problem

  os = GetGuiType  &apos; 1=Win  2=Mac  3=UNIX
  select case os
    case 1 &apos; OS Windows
      FileCopy zdroj, cil
&apos;      Copy2code(zdroj, cil, win1250, iso8859_2)
      
    case 2 &apos; OS MAC
      FileCopy zdroj, cil
   
    case 3, 4 &apos; OS Unix, Linux
      Copy2code(zdroj, cil, win1250, iso8859_2)
    
    case else
      FileCopy zdroj, cil
    
   end select 
   
  exit sub

problem:
 &apos; nemohu otevřít soubor...
 hlaseni1(48, false, false, &quot;Zkopiruj:  &quot; &amp; msg(26) &amp; chr(10) &amp; zdroj &amp; chr(10) &amp; chr(10) &amp; cil &amp; chr(10) &amp; &quot;line: &quot; &amp; erl &amp; &quot;:  &quot; &amp; Error$) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti

end sub



&apos; zkopiruje zdroj do cile, ohlasi problem
sub Zkopiruj(zdroj, cil)

  on error goto problem
  FileCopy zdroj, cil
   
  exit sub

problem:
 &apos; nemohu otevřít soubor...
 hlaseni1(48, false, false, &quot;Zkopiruj:  &quot; &amp; msg(26) &amp; chr(10) &amp; zdroj &amp; chr(10) &amp; chr(10) &amp; cil &amp; chr(10) &amp; &quot;line: &quot; &amp; erl &amp; &quot;:  &quot; &amp; Error$) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti

end sub





&apos; občerství seznam
sub Refresch
 dim sf, inStream, inFile
 dim radek, prCmd$, prVal$, path as string

 &apos; smazat starý seznam
 oDial.getcontrol(&quot;Lb_names&quot;).removeItems(0,oDial.getcontrol(&quot;Lb_names&quot;).itemCount)  
 
 on error goto problem
 path = userPath+scriptFile+&quot;.txt&quot;
 if not fileexists(Path) then goto problem 


 &apos; otevření vstupního souboru v UTF-8
 sf = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
 inStream = sf.openFileRead(path) 
 inFile = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;) 
 inFile.InputStream = inStream
 inFile.Encoding = &quot;UTF-8&quot; 
 
 While not inFile.IsEOF
   radek = inFile.readLine
   getCmdVal(radek, prCmd, prVal, true)    &apos; načist přikaz a text za přikazem
 
   if prCmd &lt;&gt; &quot;&quot; then &apos; je to přikaz
       prCmd = Ucase(prCmd)
       if (prCmd=ucase(cmd(0,0)))or(prCmd=ucase(cmd(0,1))) then   &apos; cmd(0,x) je text prikazu [Nazev]
           oDial.getControl(&quot;Lb_names&quot;).addItem(prVal,oDial.getControl(&quot;Lb_names&quot;).ItemCount)
         end if 
     end if  

   wend

   &apos; zavřít soubor
   inStream.closeInput
   inFile.closeInput
  exit sub

problem:
 &apos; nemohu otevřít soubor...
 hlaseni1(48, false, false, &quot;Refresch:  &quot; &amp; msg(26) &amp; chr(10) &amp; Path &amp; chr(10) &amp; &quot;l. &quot; &amp; erl &amp; &quot;:  &quot; &amp; Error$) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti
 &apos; složitější obsluha chyb pro možnost zavření streamu a souborů 
 Resume problem1
 problem1:
 on error resume next
 inStream.closeInput
 inFile.closeInput
&apos; On Error Goto 0
end sub



&apos; v proměnných prCmd, prVal vrací hlavi prikaz (např. [Find]) a hodnotu (text za prikazem)
sub getCmdVal(radek as string, prCmd as string, prVal as string, triming as boolean) 
dim i as long 
dim pom as string
  pom = replace_(radek,chr(9),subTab)  &apos; tabulatory nahradit 4 mezerami 
  pom = trim(pom)
  prCmd = &quot;&quot;
  prVal = &quot;&quot;
  if left(pom,1) = &quot;[&quot; then &apos; asi přikaz
     prCmd = leftTo(pom,&quot;]&quot;)+&quot;]&quot;
     if triming then
        prVal = rightPast(pom,&quot;]&quot;)
       else  &apos; pro hledaci a nahrazovaci retezce je treba zacovat mezery na krajich retezce
        prVal = rightPast(radek,&quot;]&quot;)
       end if 
        
    end if

end sub


&apos; uloží parametry hledani do souboru po jmenem NAM 
sub saveOptionToFile(mode as byte, byval nam$, byval find$, byval repl$, byval para$, byval comm$)
 dim radek, path, tmp as string
 dim prCmd as string, prVal as string &apos; pracovni promenne vracejici hlavi prikaz (např [Find]) a hodnotu
 dim outPole(), n as long  &apos; pole řádků pro ulozeni do souboru, pocet zaznamu
 dim bstep as integer  &apos; krok zapracování: 0 ; 1=copy1 2=insCmd 3=insCont 4=copy2
 dim copy1 as boolean, copy1skip as boolean, insCmd as boolean, insCont as boolean, copy2 as boolean 
 dim hledam, hl0, hl1  as string
 dim sf, ioStream, ioFile
 dim CRLF

 CRLF = chr(13)+chr(10) &apos; znak konce řádku pro uložení souboru
 
 hledam = trim(replace_(nam,chr(9),subTab))  &apos; text jmena davky
 nam = &quot;&quot;+cmd(0,lng)+&quot; &quot;+hledam  &apos; očistit jmeno od mezer a tabulatoru
 find = &quot;  &quot;+cmd(1,lng)+find
 repl = &quot;  &quot;+cmd(2,lng)+repl
 para = &quot;  &quot;+cmd(3,lng)+&quot; &quot;+para
 comm = &quot;  &quot;+cmd(4,lng)+&quot; &quot;+comm


 select case mode
   case 0 &apos;Přidat před [Konec]     
     hledam = &quot;&quot;        &apos; pokud je &quot;&quot; tak se nanajde jmeno, ale az [konec]     
     copy1 = false       &apos; zpracovat obsah za nalezenym [Název] 
     copy1skip = false  &apos; preskocit prepis do vystupu
     insCmd = true     &apos; vlozit nazev prikazu
     insCont = true     &apos; vlozit obsah ukladanych parametru
     copy2 = true       &apos; prepsat zbytek do konce souboru
     
   case 1 &apos; přepsat - obsah ulozit za nalezene jmeno
&apos;     hledam = &quot;&quot;       &apos; pokud je &quot;&quot; tak se nanajde jmeno, ale az konec     
     copy1 = true       &apos; zpracovat obsah za nalezenym [Název] 
     copy1skip = true   &apos; preskocit prepis do vystupu
     insCmd = false     &apos; vlozit nazev prikazu
     insCont = true     &apos; vlozit obsah ukladanych parametru
     copy2 = true       &apos; prepsat zbytek do konce souboru
     
   case 2 &apos; najit existujicí jmeno dávky a ulozit obsah na jeji konec
&apos;     hledam = &quot;&quot;       &apos; pokud je &quot;&quot; tak se nanajde jmeno, ale az konec     
     copy1 = true       &apos; zpracovat obsah za nalezenym [Název] 
     copy1skip = false  &apos; preskocit prepis do vystupu
     insCmd = false     &apos; vlozit nazev prikazu
     insCont = true     &apos; vlozit obsah ukladanych parametru
     copy2 = true       &apos; prepsat zbytek do konce souboru
   
  end select 

  hl0 = ucase(cmd(0,0))+ucase(hledam)
  hl1 = ucase(cmd(0,1))+ucase(hledam)


 on error goto problem
 path = userPath+scriptFile+&quot;.txt&quot;
 n = -1
 bstep = 0
 if not fileexists(Path) then goto problem 

 &apos; otevření vstupního souboru v UTF-8
 sf = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
 ioStream = sf.openFileRead(path) 
 ioFile = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;) 
 ioFile.InputStream = ioStream
 ioFile.Encoding = &quot;UTF-8&quot; 
 
 While not ioFile.IsEOF  &apos; cyklus pro všechny řádky
     radek = ioFile.readLine
     getCmdVal(radek, prCmd, prVal, true)    &apos; načist přikaz a text za přikazem
     prCmd = ucase(prCmd)
     prVal = trim(ucase(prVal))
          
   nextStep:   &apos; pokud se preskakuje krok tak nenacitat dalsi radek
     select case bstep
       case 0  &apos; krok 0 prepisuje rádky tak dlouho dokud nenajde hledane jmeno davky nebo [konec]
         &apos; pridat radek do vystupu
         n = n +1
         redim preserve outPole(n)  &apos; pridat prazdne zaznam do vystupniho pole
         outPole(n) = radek
         &apos; pokud je nalezeno jmeno nebo [konec] tak prepnout na dalsi krok 
         if (prCmd+prVal=hl0)or(prCmd+prVal=hl1)or(prCmd=ucase(cmd(5,0)))or(prCmd=ucase(cmd(5,1))) then  &apos; cmd(5,x)=[konec]
             bstep = 1
             &apos; pokud se pridava nova davka pred Konec premazat [konec]
             if mode=0 then goto nextStep &apos; další krok bez načteni dalsiho radku
           end if
           
       
       case 1 &apos; prepisuje/preskakuje radky dokud nenajde dalsi [nazev] nebo [konec]
         if copy1 then
            &apos; nalezen dalsi prikaz [nazev] nebo [konec], pred nej se bude vkladat  
            if (prCmd=ucase(cmd(0,0)))or(prCmd=ucase(cmd(0,1)))or(prCmd=ucase(cmd(5,0)))or(prCmd=ucase(cmd(5,1)))  then  
               bstep = 2
               goto nextStep &apos; další krok bez načteni dalsiho radku
              end if
            if not copy1skip then &apos; prepsat do vystupu, pokud je povoleno  
               &apos; prepsat radek do vystupu
               n = n +1
               redim preserve outPole(n)  &apos; pridat prazdne zaznam do vystupniho pole
               outPole(n) = radek
              end if

           
           else  &apos; nezpracovava se, skoc na dalsi krok 
            bstep = 2
            goto nextStep &apos; další krok bez načteni dalsiho radku
           end if

       case 2  &apos; vloží prikaz [Název] + text jmena
         if InsCmd then
             if mode=0 then
                 outPole(n) = nam
               else
                 &apos; pridat radek do vystupu
                 n = n+2 &apos; dva radky
                 redim preserve outPole(n)  &apos; pridat prazdne zaznam do vystupniho pole
                 outPole(n-1) = &quot;&quot;
                 outPole(n) = nam
               end if
            end if   
         bstep = 3
         goto nextStep &apos; další krok bez načteni radku


       case 3  &apos; vloží obsah 
         if InsCont then
             &apos; pridat radek do vystupu
             n = n+5 &apos;  radky
             redim preserve outPole(n)  &apos; pridat prazdne zaznamy do vystupniho pole
&apos;             outPole(n-5) = &quot;&quot;
             outPole(n-4) = find
             outPole(n-3) = repl
             outPole(n-2) = para
             outPole(n-1) = comm
             outPole(n) = &quot;&quot;

           end if
         bstep = 4
         goto nextStep &apos; další krok bez načteni radku
       
       case 4  &apos; dokopiruje zbytek souboru
         if copy2 then
            &apos; pridat radek do vystupu
            n = n +1
            redim preserve outPole(n)  &apos; pridat prazdne zaznam do vystupniho pole
            outPole(n) = radek
           end if

      end select

     
   wend &apos; cyklus pro všechny řádky

   &apos; zavřít soubor
   ioStream.closeInput
   ioFile.closeInput

  &apos; ulozit vystupni pole  
  &apos; otevření výstupního souboru
  ioStream = sf.openFileWrite(path) 
  ioFile = createUnoService(&quot;com.sun.star.io.TextOutputStream&quot;) 
  ioFile.OutputStream = ioStream
  ioFile.Encoding = &quot;UTF-8&quot; 

  for n = 0 to ubound(outPole())
    ioFile.writeString(outPole(n)+CRLF)
   next n 

  ioStream.closeOutput
  ioFile.closeOutput
  
  &apos; pokud bylo nové jméno tak občerstvit seznam
  if mode = 0 then Refresch
  
  exit sub

problem:
 &apos; nemohu otevřít soubor...
 hlaseni1(48, false, false, &quot;SaveOptionToFile:  &quot; &amp; msg(26) &amp; chr(10) &amp; Path &amp; chr(10) &amp; &quot;l. &quot; &amp; erl &amp; &quot;:  &quot; &amp; Error$) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti
 &apos; složitější obsluha chyb pro možnost zavření streamu a souborů 
 Resume problem1
 problem1:
 on error resume next
 ioStream.closeInput
 ioFile.closeInput
 ioStream.closeOutput
 ioFile.closeOutput
end sub










</script:module>