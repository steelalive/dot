<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ObjFind" script:language="StarBasic">REM  *****  BASIC  *****
option explicit

Sub Main

End Sub




&apos;zjistí jestli je zadany rozsah uvnitř regionu vybraneho textu
sub isInsideOfSelection(rozsah) as boolean
  
  isInsideOfSelection = false  &apos; predpoklada se že ne
  on error goto konec  &apos; pokud nastane chyba regionu, tak je vysledek false = mimo ROZSAH je mimo AltSiniSel
  
  if AltSearchVolby.csele=0 then 
    isInsideOfSelection = true  &apos; neni-li aktivovana volba &quot;hledat jen uvnitř bloku&quot; tak true
    exit sub
   end if 
  
  &apos;je zacatek ROZSAHu před zacatkem AltSiniSel ?
  if (1 = AltSiniSel.text.compareRegionStarts(rozsah, AltSiniSel.getStart)) then exit sub 

  &apos; je konec  ROZSAHu za zacatkem AltSiniSel ?
  if (-1 = AltSiniSel.text.compareRegionEnds(rozsah, AltSiniSel.getEnd)) then exit sub 

  isInsideOfSelection = true  &apos; 
 
konec: 
   
end sub



&apos; test na stejný začatek oblasti
sub isRegionStart0(curs,anchor) as boolean
on error goto konec
isRegionStart0 = false
 if 0 = curs.text.compareRegionStarts(curs.getStart(), anchor.getStart())  then isRegionStart0 = true
konec:
end sub



&apos; vrati true je-li curs před anchor 
&apos; pokud je CHYBA=true tak vrací true i při chybě regionu
sub isCursorBefore(curs,anchor, chyba as boolean) as boolean
on error goto konec
isCursorBefore = false
 if 1 = curs.text.compareRegionStarts(curs.getStart(), anchor.getStart())  then isCursorBefore = true
 exit sub

konec:
 if chyba then isCursorBefore = true
end sub


&apos; pokus - debug
&apos; nepoužitelne při testu blika obrazovka a velmi pomale
sub isFieldDispUsed(field) as boolean
on error goto konec
isFieldDispUsed = false
&apos; if field.IsFieldDisplayed  then isFieldDispUsed = true
 if field.IsFieldUsed   then isFieldDispUsed = true
konec:
end sub



&apos; testuje jesli je zadany textový rozsah v hlavním dokumentu
sub isBodyTextRegion(anch) as boolean
 isBodyTextRegion = false
 on error goto konec
 &apos; je jedno jak test dopadne, rozhodne zda se vyvola chyba = false  
 if 0 = AltSearchDoc.text.compareRegionStarts(AltSearchDoc.text.getStart(), anch.getStart())  then isBodyTextRegion = true
 isBodyTextRegion = true

konec:
end sub
  

&apos; vrací 1 pokud je curs před anchor; 0 pokud je za; -1 pokud jsou různe regiony 
sub isRegionBefore(curs,anchor) as integer
on error goto konec
 isRegionBefore =-1
 if 1 = curs.text.compareRegionStarts(curs.getStart(), anchor.getStart())  then 
   isRegionBefore = 1
  else
   isRegionBefore = 0
  end if 
 exit sub

konec:
end sub



&apos; pro serazení podle cisla stránky; 
&apos; pole() obsahuje čisla stránkek kde se kotvy nachází 
&apos; pole1() obsahuje objekt text. pole příslušné stránce
Public Sub QSortField(pole As Variant, pole1 as variant, indexD As Long, indexH As Long)
   Dim pivot   As Variant, piv1 as variant &apos; objekt kotvy 
   Dim tmpSwap As Variant, tmpSwap1 as variant
   Dim indexD0  As Long
   Dim indexH0   As Long
    
   indexD0 = indexD &apos;přesun dat to pomocných porměnných
   indexH0 = indexH
   
   pivot = pole((indexD + indexH) \ 2) &apos;volba pivotu
   piv1 = pole1((indexD + indexH) \ 2) &apos;volba pivotu
   
   While (indexD0 &lt;= indexH0)
      While ((pole(indexD0)&lt; pivot) And (indexD0 &lt; indexH)) &apos;roztřídění tabulek vzhledem&amp;nbsp;k&amp;nbsp;pivotu
&apos;      While (isBeforeField(pole(indexD0),pole1(indexD0), pivot, piv1) And (indexD0 &lt; indexH)) &apos;roztřídění tabulek vzhledem&amp;nbsp;k&amp;nbsp;pivotu
         indexD0 = indexD0 + 1
      Wend

      While ((pivot &lt; pole(indexH0)) And (indexH0 &gt; indexD))
&apos;      While (isBeforeField(pivot, piv1, pole(indexH0), pole1(indexH0)) And (indexH0 &gt; indexD))
         indexH0 = indexH0 - 1
      Wend
      
      If (indexD0 &lt;= indexH0) Then
         tmpSwap = pole(indexD0)       : tmpSwap1 = pole1(indexD0)
         pole(indexD0) = pole(indexH0) : pole1(indexD0) = pole1(indexH0)
         pole(indexH0) = tmpSwap       : pole1(indexH0) = tmpSwap1
         indexD0 = indexD0 + 1
         indexH0 = indexH0 - 1
      End If
   Wend
   
   If (indexD &lt; indexH0) Then QSortField pole, pole1, indexD, indexH0 &apos;rekurzivní volání pro nově vzniklá pole
   If (indexD0 &lt; indexH) Then QSortField pole, pole1, indexD0, indexH
End Sub




&apos; uspořádá položky podle regionu v rámci stejného čisla stránky 
&apos; pol() pole s cislu stránek
&apos; pol1() pole s objekty textovych polí
sub sortRegionField(pol(),pol1())
 dim s&amp;, t&amp;, i&amp;, z&amp;, k&amp;, max&amp;, pgn&amp;, oTF 
 dim zmena
 max = ubound(pol())
 if max&lt;0 then exit sub  &apos; pole neni 
 if pol(0)&lt;0 then exit sub &apos; netridene pole
 i = 0
 z = 0  &apos; zacatecni idex strany
 pgn = pol(0)  &apos; cislo prvni stranky 
 do while (i &lt;= max)
   if (pol(i) &lt;&gt; pgn)or(i = max) then &apos; nasledujici stranka je jina; zmena stranky
      &apos; setridit v ramci teto stranky
      k = i-1
      if i = max then k = i
      &apos; buble sort
&apos;goto preskoc
&apos;      msgbox &quot;Tridim stranku: &quot; &amp; pgn &amp; &quot;  od indexu: &quot; &amp; z &amp; &quot; do &quot; &amp; k

      For s = 1 to k - z  &apos; počet opakování průchodů
        zmena = false
		For t = z to k-s  &apos; 1 průchod
&apos;          If SortList(t) &gt; SortList(t+1) Then
           select case isRegionBefore(pol1(t).anchor.start,pol1(t+1).anchor.start)
              case 1 &apos;první je pred druhym - OK
                goto neprohodit
              case 0 &apos; prvni je za druhym ve stejne oblasti - prohodit   
                goto prohodit
              case -1 &apos; ruzne oblasti  
                if isBodyTextRegion(pol1(t+1).anchor.start) then &apos; body region je za nejakou jinou
                   goto prohodit
                  end if
                
             end select
             
           goto neprohodit
          prohodit:
           &apos; prohodit objekty
		    oTF = pol1(t)
			pol1(t) = pol1(t+1)
			pol1(t+1) = oTF
			zmena = true
          neprohodit: 

         Next t
         if not zmena then exit for
       Next s 

preskoc:      
      &apos; nastavit dalsi stranku
      z = i : pgn = pol(i)
     end if      
 
   i = i+1
   if (i mod 17)=0 then &apos; informace o stavu načítání
      vypisFoundInfo(msg(40) &amp; &quot;  &quot; &amp; i)  
     end if 
   
  Loop
  
  vypisFoundInfo(&quot;&quot;)

end sub


sub mySetDialFocus  &apos; nastaví fokus do dialogu
 AltSearchFindLast = &quot;&quot;
 select case GetGuiType  &apos; 1=Win  2=Mac  3=UNIX
&apos;   case 1 &apos; OS Windows
&apos;   case 2 &apos; OS MAC
   case 3, 4 &apos; OS Unix, Linux
     &apos; v Linuxu nefunguje přímo oDial.SetFocus() po ...containerWindow.setVisible(true)
     &apos; po dalším kliknutí se ale zresetují kurzory = zvláštní obsluha v BtFindNext
     oDial.setVisible(false)
     oDial.setVisible(true)
 &apos;    oDial.setFocus()
     AltSearchFindLast = oDial.model.Cb_find.text &apos; zapamatovat poslední hledání - příznak pro zvláštní obsluhu v BtFindNext

   case else
     &apos; ve Win oDial.SetFocus() do verze 2.3.1 fungoval, a kurory se neresetovali...
     oDial.setFocus()
 end select 
 
end sub




&apos; pol1() pole s objekty text poli, pol() pole s čísly stránek  
sub getSortFields(pol1(), pol(), druh as string, sort as boolean )
&apos;dim pol() as integer, pol1() &apos; as tField
dim oTFs, oTF, oTF0, pCur, pgno, pgno0, o1,o2
dim count&amp;, i&amp;, s&amp;, t&amp;
dim move

  redim tmppole()  &apos; pole objektů
  redim tmppole1() &apos; pole stranek

  if sort then  &apos; uložit původní pozici kurzoru jen pokud se třídí
    pCur = ovCurs.text.createTextCursorByRange(ovCurs) 
    &apos; zmizet okno - je to rychlejší
    AltSearchDoc.CurrentController.Frame.containerWindow.setVisible(false) 
   end if 

  count = 0
  oTFs = AltSearchDoc.getTextFields().createEnumeration()
  
  Do While oTFs.hasMoreElements()
    oTF = oTFs.nextElement()

    select case druh &apos; vybrat druh pole
       case &quot;Annotation&quot;  &apos; pouze poznamky
         if oTF.supportsService(&quot;com.sun.star.text.TextField.Annotation&quot;) then
             goto zapocitej
           else 
             goto preskoc
           end if
       
       case &quot;GetReference&quot;   &apos; pouze reference  
         if oTF.supportsService(&quot;com.sun.star.text.TextField.GetReference&quot;) then
             goto zapocitej
           else 
             goto preskoc
           end if
    
       case else  &apos; všechna pole mimo poznámek a referenci
         if not (oTF.supportsService(&quot;com.sun.star.text.TextField.Annotation&quot;) or oTF.supportsService(&quot;com.sun.star.text.TextField.GetReference&quot;)) then
             goto zapocitej
           else 
             goto preskoc
           end if
    
        end select


    zapocitej:
       &apos; přidat nový záznam do pole textových polí
       redim preserve pol1(count)
       redim preserve pol(count) &apos; pole stranek
 
       if sort then
          &apos; zjistit číslo stránky a zatřídit do stávajícího pole
          ovCurs.gotoRange(oTF.anchor.getStart(),false)
          pgno = ovCurs.getPage()
          pol1(count) = oTF
          pol(count) = pgno
           
         else  
          &apos; bez třídění
          pol1(count) = oTF
          pol(count) = 0
         end if 

       count= count+1
       	
       if (count mod 17)=0 then &apos; informace o stavu načítání
          vypisFoundInfo(msg(40) &amp; &quot;  &quot; &amp; count) 
          if findcounter &lt; 0 then : sort = false : pol(0)=-1 : end if &apos; netřídit, skoncit
         end if 
       if i&gt;65000 then 
         hlaseni1(64, true, false, &quot;getSortFields:  Je použito více jak 65000 polí, poznámek nebo poznámek pod čarou. Zbytek ignoruji. &quot;) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti 
	     goto konec
	    end if

  preskoc:

   Loop

&apos; thiscomponent.CurrentController.Frame.containerWindow.toFront
&apos;xray thiscomponent.CurrentController.Frame.containerWindow

konec:  

  vypisFoundInfo(&quot;&quot;)
  if sort then  &apos; obnovit původní pozici viditelného kurzoru, jen pokud se třídí
     ovCurs.gotoRange(pCur.getStart(),false)
     ovCurs.gotoRange(pCur.getEnd(),true)
     AltSearchDoc.CurrentController.Frame.containerWindow.setVisible(true) 
     if not AltSearchDialog_end then mySetDialFocus  &apos; nastaví fokus do dialogu, jinak se při dalším kliknuti do dialogu resetuje nastavení kurzorů      

     if Ubound(pol()) &gt; 0 then  &apos; nema cenu tridit prazdne nebo jednoprvkové pole
        &apos; setridí podle stranek a kotev  
        QSortField(pol(),pol1(), 0, Ubound(pol()))
        &apos; setridi zaznamy v ramci stejne stránky 
        sortRegionField(pol(),pol1())
       end if 
     
     &apos; po obnovení viditelnosti se nezobrazí nastrojové lišty
     &apos; spraví se to až když okno ztratí/obnoví fokus 
     &apos;xray     AltSearchDoc.CurrentController.Frame.containerWindow
    end if 

end sub




&apos; pol1() pole s objekty značek pro reference, pol() pole s čísly stránek  
sub getSortRefMarks(pol1(), pol(), sort as boolean )
&apos;dim pol() as integer, pol1() &apos; as tField
dim oRF, pCur, pgnop, pgno  &apos;, tmppp   
dim count&amp;, i&amp;
  

  if sort then  &apos; uložit původní pozici kurzoru jen pokud se třídí
    pCur = ovCurs.text.createTextCursorByRange(ovCurs) 
&apos;    ovCurs.setVisible(false) &apos; zmizet kurzor aby to neblikalo - nefunguje, asi bug OOo (issue 83611 ?)
&apos;    msgbox  ovCurs.isVisible()
    &apos; zmizet okno - je to rychlejší a nebliká
    AltSearchDoc.CurrentController.Frame.containerWindow.setVisible(false) 
   end if 

  count = 0
  oRF = AltSearchDoc.ReferenceMarks

  for count = 0 to oRF.count-1
    &apos; přidat nový záznam do pole textových polí
    redim preserve pol1(count)
    redim preserve pol(count) &apos; pole stranek

    if sort then
      &apos; zjistit číslo stránky a zatřídit do stávajícího pole
      ovCurs.gotoRange(oRF(count).anchor.getStart(),false)
      pgno = ovCurs.getPage()
      pol1(count) = oRF(count)
      pol(count) = pgno

     else  
      &apos; bez třídění
      pol1(count) = oRF(count)
      pol(count) = 0
     end if 

    if (count mod 17)=0 then &apos; informace o stavu načítání
       vypisFoundInfo(msg(40) &amp; &quot;  &quot; &amp; count) 
       if findcounter &lt; 0 then : sort = false : pol(0)=-1 : end if &apos; netřídit, skoncit
      end if 
    if i&gt;65000 then 
      hlaseni1(64, true, false, &quot;getSortFields:  Je použito více jak 65000 značek pro reference. Zbytek ignoruji. &quot;) &apos;  styl: 16=zastavit 32=? 48=! 64=info; moznopotlačit; prerusit cinnosti 
      goto konec
     end if

  preskoc:

  next count

&apos; thiscomponent.CurrentController.Frame.containerWindow.toFront
&apos;xray thiscomponent.CurrentController.Frame.containerWindow

konec:  

  vypisFoundInfo(&quot;&quot;)
  if sort then  &apos; obnovit původní pozici viditelného kurzoru, jen pokud se třídí
     ovCurs.gotoRange(pCur.getStart(),false)
     ovCurs.gotoRange(pCur.getEnd(),true)
     &apos; zobrezit zpátky okno souboru
     AltSearchDoc.CurrentController.Frame.containerWindow.setVisible(true) 
     if not AltSearchDialog_end then mySetDialFocus  &apos; nastaví fokus do dialogu

     if Ubound(pol()) &gt; 0 then  &apos; nema cenu tridit prazdne nebo jednoprvkové pole
       &apos; setridí podle stranek a kotev  
       QSortField(pol(),pol1(), 0, Ubound(pol()))
       &apos; setridi zaznamy v ramci stejne stránky 
       sortRegionField(pol(),pol1())
      end if 
     
     &apos; po obnovení viditelnosti se nezobrazí nastrojové lišty
     &apos; spraví se to až když okno ztratí/obnoví fokus 
     &apos;xray     AltSearchDoc.CurrentController.Frame.containerWindow
    end if 

&apos;  msgbox prvnipruchod
&apos;  prvnipruchod  = tmppp &apos; obnovit příznak 1. průchodu - mohl se změnit při změně zaměření

end sub



&apos; vrátí index dalšího objektu pro hledání, nebo 0
sub findNextObj(pgn,cur,pol1(),pol()) as long
dim i&amp;, j&amp;, max&amp;  
 
 max = ubound(pol1())
 &apos; hledat nejbližší stejnou nebo vyssi stranku
 for i = 0 to max
    if pol(i) &gt;= pgn then goto stranka
  next i
 &apos; nenalezeno
 findNextObj = -1
 exit sub

stranka: 
 if pol(i) = pgn then &apos; stejná stránka

    for j = i to max &apos; prohledat všechny kotvy na straně pgn
    
     if pol(j)&lt;&gt;pgn then &apos; další stránka - kurzor byl asi za poslední kotvou na stránce  
         findNextObj = j
         exit sub
        end if 
     
     select case isRegionBefore(cur,pol1(j).anchor.start)
       case 1 &apos;kurzor je pred kotvou - nalezeno
         findNextObj = j
         exit sub        

       case 0 &apos; kurzor je za kotvou i ve stejne oblasti - zkusit další kotvu

       case -1 &apos; ruzne oblasti  
        if isBodyTextRegion(cur) then &apos; body text region - první kotva mimo body text oblast
           findNextObj = j
           exit sub
          end if
                
      end select
      
     next j

     findNextObj = -1 &apos; nenalezeno

   else &apos; nejbližší vyšší jina stranka
    findNextObj = i
   end if

end sub




&apos; vrátí index předchozího objektu pro hledání, nebo 0
sub findPrevObj(pgn,cur,pol1(),pol()) as long
dim i&amp;, j&amp;, max&amp;  
 
 max = ubound(pol1())
 &apos; hledat nejbližší stejnou nebo vyssi stranku
 for i = max to 0 step -1
    if pol(i) &lt;= pgn then goto stranka
  next i
 &apos; nenalezeno
 findPrevObj = -1
 exit sub

stranka: 
 if pol(i) = pgn then &apos; stejná stránka

    for j = i to 0 step -1

     if pol(j)&lt;&gt;pgn then &apos; další stránka - kurzor byl asi před první kotvou na stránce  
         findPrevObj = j
         exit sub
        end if 

     select case isRegionBefore(pol1(j).anchor.start,cur)
       case 1 &apos;první je pred druhym - nalezeno
         findPrevObj = j
         exit sub        
       case 0 &apos; prvni je za druhym ve stejne oblasti - pokračovat v hledaní   

       case -1 &apos; ruzne oblasti  
        if not isBodyTextRegion(cur) then &apos; body text region - první kotva mimo body text oblast
           findPrevObj = j
           exit sub
          end if
                
      end select
      
     next j

     findPrevObj = -1 &apos; nenalezeno

   else &apos; nejbližší vyšší jina stranka
    findPrevObj = i
   end if

end sub




&apos; vrátí index nejbližší předchozí zálozku za kurzorem, nebo 0
sub findPrevBookm(cur,pol1()) as long
dim i&amp;, j&amp;, max&amp;  
 
    max = pol1.count-1  &apos;ubound(pol1())

    for j = max to 0 step -1

     select case isRegionBefore(pol1(j).anchor,cur)
       case 1 &apos;první je pred druhym - nalezeno
         findPrevBookm = j
         exit sub        

       case 0 &apos; prvni je za druhym ve stejne oblasti - pokračovat v hledaní   

       case -1 &apos; ruzne oblasti  
&apos;        if not isBodyTextRegion(cur) then &apos; body text region - první kotva mimo body text oblast
&apos;           findPrevBookm = j
&apos;           exit sub
&apos;          end if
                
      end select
      
     next j

     findPrevBookm = -1 &apos; nenalezeno

end sub



&apos; vrátí index nejbližší další zálozky za kurzorem, 
sub findNextBookm(cur,pol1()) as long
dim i&amp;, j&amp;, max&amp;  
 
    max = pol1.count-1  &apos;ubound(pol1())

    for j = 0 to max 

     select case isRegionBefore(cur, pol1(j).anchor)
       case 1 &apos;první je pred druhym - nalezeno
         findNextBookm = j
         exit sub        

       case 0 &apos; prvni je za druhym ve stejne oblasti - pokračovat v hledaní   

       case -1 &apos; ruzne oblasti  
&apos;        if not isBodyTextRegion(cur) then &apos; body text region - první kotva mimo body text oblast
&apos;           findNextBookm = j
&apos;           exit sub
&apos;          end if
                
      end select
      
     next j

     findNextBookm = -1 &apos; nenalezeno

end sub





&apos; vrátí index neuspěšného hledání -1/1 začátek/konec bloku, -2/2 zač./konec dokumentu a nastaví pařičně prCurs
sub getNoFoundIndex(blockCur) as integer
 prCurs = blockCur.text.createTextCursorByRange(blockCur) &apos; podle bloku
 if AltSearchVolby.zpet = 1 then 
    getNoFoundIndex = -1  &apos; dosažen začátek bloku
    if AltSearchVolby.csele=0 then     &apos; dosažen začátek souboru
      getNoFoundIndex = -2 
      prCurs = AltSearchDoc.text.getEnd() 
     end if 
   else
    getNoFoundIndex = 1  &apos; dosažen konec bloku
    if AltSearchVolby.csele=0 then     &apos; dosažen konec souboru
      getNoFoundIndex = 2 
      prCurs = AltSearchDoc.text.getStart()
     end if 
   end if
end sub



&apos; zjistit soucasny index - najit podle umistění kotvy  
&apos; max je nutno zadat parametrem protože pokud je oArr() kolekce, tak nefunguje správně funkce Ubound()   
sub getIndexByAnchor(oArr(),oCur, max) as long
dim i&amp;

 for i = 0 to max
   if isRegionStart0(oCur,oArr(i).anchor)  then 
     getIndexByAnchor = i
     exit sub
    end if 
  next i
  
 &apos; nenalezno 
 getIndexByAnchor = -1
end sub


&apos; je hledaný podřetězec HLED obsažen ve VST a je případně uvnitř bloku?
&apos; pokud je MODE = 0  tak se hledá bez ohledu výskyt hled. podřetězce
&apos; oObj je objekt s kotvou ktera se pripadne testuje, je-li uvnitř bloku
sub isSubstrInBlock(oObj, Vst$, Hled$, mode as integer) as boolean
dim bin as integer, j as long
 isSubstrInBlock = true
 bin = 0
 if AltSearchVolby.kcase=0 then bin = 1  &apos; pokud je bin=1 instr(,,bin) nezohlednuje velikost znaků zatim co BIN=0 porovnava presne binarně 
 j = instr(1,Vst,Hled,bin)
 if hled = &quot;&quot; then j = 0  &apos; jinak nelze najit prazdne texty

 if (j&gt;0)or(vst=Hled)or(mode=0) then  &apos; nalezeno  
    &apos; hledání pouze uvnitř bloku
    if AltSearchVolby.csele=0 then exit sub &apos; cely dokument - nalezeno
    &apos;zjistit kotvu - do oAnch
    dim oAnch
    oAnch = oObj.anchor &apos; nalezeny objekt
   &apos; je kotva uvnitř vyberu?
   if isInsideOfSelection(oAnch) then exit sub &apos; ano, nalezeno uvnitř bloku
  end if 

 isSubstrInBlock = false
end sub



</script:module>