//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27597688
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61, texmode_independent
.address_size 64

	// .globl	DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan
.const .align 8 .b8 __internal_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.entry DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan(
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2,
	.param .u64 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3
)
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<125>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<120>;
	.reg .f64 	%fd<538>;
	.reg .b64 	%rd<140>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd48, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1];
	ld.param.u64 	%rd49, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2];
	ld.param.u64 	%rd50, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r40, %ntid.x;
	mov.b32	%r41, %envreg3;
	mad.lo.s32 	%r42, %r39, %r40, %r41;
	mov.u32 	%r43, %tid.x;
	add.s32 	%r1, %r42, %r43;
	cvt.s64.s32	%rd2, %r1;
	mul.wide.s32 	%rd52, %r1, 8;
	add.s64 	%rd3, %rd50, %rd52;
	mov.f64 	%fd513, 0d7FFFFFFFE0000000;
	setp.gt.s32	%p1, %r1, 4;
	mov.f64 	%fd512, %fd513;
	@%p1 bra 	BB0_2;

	ld.global.f64 	%fd512, [%rd3];

BB0_2:
	@%p1 bra 	BB0_4;

	ld.global.f64 	%fd513, [%rd3];

BB0_4:
	abs.f64 	%fd94, %fd513;
	setp.gtu.f64	%p3, %fd94, 0d7FF0000000000000;
	cvt.u32.u64	%r2, %rd2;
	setp.gt.s32	%p4, %r2, 4;
	or.pred  	%p5, %p3, %p4;
	selp.f64	%fd5, 0d0000000000000000, %fd512, %p5;
	abs.f64 	%fd6, %fd5;
	setp.leu.f64	%p6, %fd6, 0d3FF0000000000000;
	mov.f64 	%fd514, %fd6;
	@%p6 bra 	BB0_6;

	// inline asm
	rcp.approx.ftz.f64 %fd95,%fd6;
	// inline asm
	neg.f64 	%fd97, %fd6;
	mov.f64 	%fd98, 0d3FF0000000000000;
	fma.rn.f64 	%fd99, %fd97, %fd95, %fd98;
	fma.rn.f64 	%fd100, %fd99, %fd99, %fd99;
	fma.rn.f64 	%fd101, %fd100, %fd95, %fd95;
	setp.eq.f64	%p7, %fd6, 0d7FF0000000000000;
	selp.f64	%fd514, 0d0000000000000000, %fd101, %p7;

BB0_6:
	mul.f64 	%fd103, %fd514, %fd514;
	mov.f64 	%fd104, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd105, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd106, %fd105, %fd103, %fd104;
	mov.f64 	%fd107, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd108, %fd106, %fd103, %fd107;
	mov.f64 	%fd109, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd110, %fd108, %fd103, %fd109;
	mov.f64 	%fd111, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd112, %fd110, %fd103, %fd111;
	mov.f64 	%fd113, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd114, %fd112, %fd103, %fd113;
	mov.f64 	%fd115, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd116, %fd114, %fd103, %fd115;
	mov.f64 	%fd117, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd118, %fd116, %fd103, %fd117;
	mov.f64 	%fd119, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd120, %fd118, %fd103, %fd119;
	mov.f64 	%fd121, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd122, %fd120, %fd103, %fd121;
	mov.f64 	%fd123, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd124, %fd122, %fd103, %fd123;
	mov.f64 	%fd125, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd126, %fd124, %fd103, %fd125;
	mov.f64 	%fd127, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd128, %fd126, %fd103, %fd127;
	mov.f64 	%fd129, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd130, %fd128, %fd103, %fd129;
	mov.f64 	%fd131, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd132, %fd130, %fd103, %fd131;
	mov.f64 	%fd133, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd134, %fd132, %fd103, %fd133;
	mov.f64 	%fd135, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd136, %fd134, %fd103, %fd135;
	mov.f64 	%fd137, 0d3FC99999999840D2;
	fma.rn.f64 	%fd138, %fd136, %fd103, %fd137;
	mov.f64 	%fd139, 0dBFD555555555544C;
	fma.rn.f64 	%fd140, %fd138, %fd103, %fd139;
	mul.f64 	%fd141, %fd103, %fd140;
	fma.rn.f64 	%fd142, %fd141, %fd514, %fd514;
	mov.f64 	%fd143, 0d3FF921FB54442D18;
	sub.f64 	%fd144, %fd143, %fd142;
	setp.gt.f64	%p8, %fd6, 0d3FF0000000000000;
	selp.f64	%fd145, %fd144, %fd142, %p8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd145;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd145;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd5;
	}
	and.b32  	%r47, %r46, -2147483648;
	or.b32  	%r48, %r45, %r47;
	mov.b64 	%fd9, {%r44, %r48};
	add.s64 	%rd4, %rd49, %rd52;
	mov.f64 	%fd516, 0d7FFFFFFFE0000000;
	mov.f64 	%fd515, %fd516;
	@%p1 bra 	BB0_8;

	ld.global.f64 	%fd515, [%rd4];

BB0_8:
	@%p1 bra 	BB0_10;

	ld.global.f64 	%fd516, [%rd4];

BB0_10:
	abs.f64 	%fd148, %fd516;
	setp.gtu.f64	%p11, %fd148, 0d7FF0000000000000;
	or.pred  	%p13, %p11, %p4;
	selp.f64	%fd14, 0d0000000000000000, %fd515, %p13;
	abs.f64 	%fd15, %fd14;
	setp.eq.f64	%p14, %fd15, 0d7FF0000000000000;
	mov.f64 	%fd519, 0dFFF8000000000000;
	@%p14 bra 	BB0_30;

	setp.gt.f64	%p15, %fd15, 0d41E0000000000000;
	@%p15 bra 	BB0_13;
	bra.uni 	BB0_12;

BB0_13:
	mov.b64 	 %rd5, %fd14;
	and.b64  	%rd6, %rd5, -9223372036854775808;
	shr.u64 	%rd7, %rd5, 52;
	bfe.u64 	%rd55, %rd5, 52, 11;
	add.s64 	%rd56, %rd55, 4294966272;
	cvt.u32.u64	%r4, %rd56;
	shr.u32 	%r50, %r4, 6;
	mov.u32 	%r51, 15;
	sub.s32 	%r5, %r51, %r50;
	mov.u32 	%r52, 19;
	sub.s32 	%r53, %r52, %r50;
	mov.u32 	%r54, 18;
	min.s32 	%r6, %r54, %r53;
	mov.u64 	%rd129, 0;
	setp.ge.s32	%p16, %r5, %r6;
	mov.u64 	%rd128, %rd1;
	@%p16 bra 	BB0_16;

	shl.b64 	%rd58, %rd5, 11;
	or.b64  	%rd9, %rd58, -9223372036854775808;
	cvt.u32.u64	%r55, %rd7;
	and.b32  	%r56, %r55, 2047;
	add.s32 	%r57, %r56, -1024;
	shr.u32 	%r58, %r57, 6;
	neg.s32 	%r59, %r58;
	mul.wide.s32 	%rd60, %r59, 8;
	mov.u64 	%rd61, __internal_i2opi_d;
	add.s64 	%rd62, %rd60, %rd61;
	add.s64 	%rd125, %rd62, 120;
	mov.u64 	%rd129, 0;
	mov.u64 	%rd128, %rd1;
	mov.u32 	%r110, %r5;

BB0_15:
	.pragma "nounroll";
	ld.const.u64 	%rd63, [%rd125];
	mul.lo.s64 	%rd64, %rd63, %rd9;
	mul.hi.u64 	%rd65, %rd63, %rd9;
	add.s64 	%rd66, %rd129, %rd64;
	setp.lt.u64	%p17, %rd66, %rd129;
	selp.u64	%rd67, 1, 0, %p17;
	add.s64 	%rd129, %rd67, %rd65;
	st.local.u64 	[%rd128], %rd66;
	add.s32 	%r110, %r110, 1;
	sub.s32 	%r60, %r110, %r5;
	mul.wide.s32 	%rd68, %r60, 8;
	add.s64 	%rd128, %rd1, %rd68;
	add.s64 	%rd125, %rd125, 8;
	setp.lt.s32	%p18, %r110, %r6;
	@%p18 bra 	BB0_15;

BB0_16:
	st.local.u64 	[%rd128], %rd129;
	ld.local.u64 	%rd130, [%rd1+24];
	ld.local.u64 	%rd131, [%rd1+16];
	and.b32  	%r61, %r4, 63;
	setp.eq.s32	%p19, %r61, 0;
	@%p19 bra 	BB0_18;

	cvt.u32.u64	%r62, %rd7;
	and.b32  	%r63, %r62, 63;
	shl.b64 	%rd69, %rd130, %r63;
	neg.s64 	%rd70, %rd7;
	cvt.u32.u64	%r64, %rd70;
	and.b32  	%r65, %r64, 63;
	shr.u64 	%rd71, %rd131, %r65;
	or.b64  	%rd130, %rd71, %rd69;
	shl.b64 	%rd72, %rd131, %r63;
	ld.local.u64 	%rd73, [%rd1+8];
	shr.u64 	%rd74, %rd73, %r65;
	or.b64  	%rd131, %rd74, %rd72;

BB0_18:
	shr.u64 	%rd75, %rd130, 62;
	cvt.u32.u64	%r66, %rd75;
	shr.u64 	%rd76, %rd131, 62;
	shl.b64 	%rd77, %rd130, 2;
	or.b64  	%rd137, %rd76, %rd77;
	shl.b64 	%rd28, %rd131, 2;
	setp.ne.s64	%p20, %rd28, 0;
	selp.u64	%rd78, 1, 0, %p20;
	or.b64  	%rd79, %rd78, %rd137;
	setp.gt.u64	%p21, %rd79, -9223372036854775808;
	selp.u32	%r67, 1, 0, %p21;
	add.s32 	%r9, %r67, %r66;
	setp.lt.u64	%p22, %rd79, -9223372036854775807;
	@%p22 bra 	BB0_19;

	not.b64 	%rd80, %rd137;
	neg.s64 	%rd134, %rd28;
	setp.eq.s64	%p23, %rd28, 0;
	selp.u64	%rd81, 1, 0, %p23;
	add.s64 	%rd137, %rd81, %rd80;
	xor.b64  	%rd133, %rd6, -9223372036854775808;
	bra.uni 	BB0_21;

BB0_12:
	mov.f64 	%fd162, 0d3FE45F306DC9C883;
	mul.rn.f64 	%fd149, %fd14, %fd162;
	// inline asm
	cvt.rni.s32.f64 	%r114, %fd149;
	// inline asm
	cvt.rn.f64.s32	%fd163, %r114;
	neg.f64 	%fd159, %fd163;
	// inline asm
	fma.rn.f64 	%fd150, %fd159, %fd143, %fd14;
	// inline asm
	mov.f64 	%fd156, 0d3C91A62633145C00;
	// inline asm
	fma.rn.f64 	%fd154, %fd159, %fd156, %fd150;
	// inline asm
	mov.f64 	%fd160, 0d397B839A252049C0;
	// inline asm
	fma.rn.f64 	%fd517, %fd159, %fd160, %fd154;
	// inline asm
	bra.uni 	BB0_26;

BB0_19:
	mov.u64 	%rd133, %rd6;
	mov.u64 	%rd134, %rd28;

BB0_21:
	setp.eq.s64	%p24, %rd6, 0;
	neg.s32 	%r70, %r9;
	mov.u32 	%r112, 0;
	selp.b32	%r114, %r9, %r70, %p24;
	setp.lt.s64	%p25, %rd137, 1;
	@%p25 bra 	BB0_23;

BB0_22:
	shr.u64 	%rd82, %rd134, 63;
	shl.b64 	%rd83, %rd137, 1;
	or.b64  	%rd137, %rd82, %rd83;
	shl.b64 	%rd134, %rd134, 1;
	add.s32 	%r112, %r112, -1;
	setp.gt.s64	%p26, %rd137, 0;
	@%p26 bra 	BB0_22;

BB0_23:
	mul.lo.s64 	%rd139, %rd137, -3958705157555305931;
	mov.u64 	%rd84, -3958705157555305931;
	mul.hi.u64 	%rd138, %rd137, %rd84;
	setp.lt.s64	%p27, %rd138, 1;
	@%p27 bra 	BB0_25;

	shl.b64 	%rd85, %rd138, 1;
	shr.u64 	%rd86, %rd139, 63;
	or.b64  	%rd138, %rd85, %rd86;
	mul.lo.s64 	%rd139, %rd137, -7917410315110611862;
	add.s32 	%r112, %r112, -1;

BB0_25:
	setp.ne.s64	%p28, %rd139, 0;
	selp.u64	%rd87, 1, 0, %p28;
	add.s64 	%rd88, %rd87, %rd138;
	add.s32 	%r71, %r112, 1022;
	cvt.u64.u32	%rd89, %r71;
	shl.b64 	%rd90, %rd89, 52;
	shr.u64 	%rd91, %rd88, 11;
	add.s64 	%rd92, %rd90, %rd91;
	bfe.u64 	%rd93, %rd88, 10, 1;
	add.s64 	%rd94, %rd92, %rd93;
	or.b64  	%rd95, %rd94, %rd133;
	mov.b64 	 %fd517, %rd95;

BB0_26:
	add.s32 	%r17, %r114, 1;
	and.b32  	%r72, %r17, 1;
	setp.eq.b32	%p29, %r72, 1;
	mul.rn.f64 	%fd19, %fd517, %fd517;
	@!%p29 bra 	BB0_28;
	bra.uni 	BB0_27;

BB0_27:
	mov.f64 	%fd165, 0dBDA8FF8D5A8F03DB;
	mov.f64 	%fd167, 0d3E21EEA7D67FAD92;
	// inline asm
	fma.rn.f64 	%fd164, %fd165, %fd19, %fd167;
	// inline asm
	mov.f64 	%fd171, 0dBE927E4F8E26B8E3;
	// inline asm
	fma.rn.f64 	%fd168, %fd164, %fd19, %fd171;
	// inline asm
	mov.f64 	%fd175, 0d3EFA01A019DDEC33;
	// inline asm
	fma.rn.f64 	%fd172, %fd168, %fd19, %fd175;
	// inline asm
	mov.f64 	%fd179, 0dBF56C16C16C15D69;
	// inline asm
	fma.rn.f64 	%fd176, %fd172, %fd19, %fd179;
	// inline asm
	mov.f64 	%fd183, 0d3FA5555555555551;
	// inline asm
	fma.rn.f64 	%fd180, %fd176, %fd19, %fd183;
	// inline asm
	mov.f64 	%fd187, 0dBFE0000000000000;
	// inline asm
	fma.rn.f64 	%fd184, %fd180, %fd19, %fd187;
	// inline asm
	mov.f64 	%fd191, 0d3FF0000000000000;
	// inline asm
	fma.rn.f64 	%fd518, %fd184, %fd19, %fd191;
	// inline asm
	bra.uni 	BB0_29;

BB0_28:
	mov.f64 	%fd193, 0d3DE5D8FD1FCF0EC1;
	mov.f64 	%fd195, 0dBE5AE5E5A9291691;
	// inline asm
	fma.rn.f64 	%fd192, %fd193, %fd19, %fd195;
	// inline asm
	mov.f64 	%fd199, 0d3EC71DE3567D4896;
	// inline asm
	fma.rn.f64 	%fd196, %fd192, %fd19, %fd199;
	// inline asm
	mov.f64 	%fd203, 0dBF2A01A019BFDF03;
	// inline asm
	fma.rn.f64 	%fd200, %fd196, %fd19, %fd203;
	// inline asm
	mov.f64 	%fd207, 0d3F8111111110F7D0;
	// inline asm
	fma.rn.f64 	%fd204, %fd200, %fd19, %fd207;
	// inline asm
	mov.f64 	%fd211, 0dBFC5555555555548;
	// inline asm
	fma.rn.f64 	%fd208, %fd204, %fd19, %fd211;
	// inline asm
	mul.rn.f64 	%fd213, %fd208, %fd19;
	// inline asm
	fma.rn.f64 	%fd518, %fd213, %fd517, %fd517;
	// inline asm

BB0_29:
	and.b32  	%r73, %r17, 2;
	setp.eq.s32	%p30, %r73, 0;
	neg.f64 	%fd216, %fd518;
	selp.f64	%fd519, %fd518, %fd216, %p30;

BB0_30:
	add.f64 	%fd25, %fd519, 0d0000000000000000;
	add.s64 	%rd46, %rd48, %rd52;
	mov.f64 	%fd521, 0d7FFFFFFFE0000000;
	mov.f64 	%fd520, %fd521;
	@%p1 bra 	BB0_32;

	ld.global.f64 	%fd218, [%rd46];
	mul.f64 	%fd520, %fd218, 0d3FD45F306DC9C883;

BB0_32:
	@%p1 bra 	BB0_34;

	ld.global.f64 	%fd521, [%rd46];

BB0_34:
	abs.f64 	%fd220, %fd521;
	setp.gtu.f64	%p33, %fd220, 0d7FF0000000000000;
	or.pred  	%p35, %p33, %p4;
	selp.f64	%fd525, 0d0000000000000000, %fd520, %p35;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %fd525;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd525;
	}
	add.s32 	%r75, %r18, 1048576;
	mov.b64 	%fd221, {%r74, %r75};
	cvt.rni.f64.f64	%fd222, %fd221;
	cvt.rzi.s64.f64	%rd97, %fd222;
	cvt.u32.u64	%r19, %rd97;
	neg.f64 	%fd223, %fd222;
	mov.f64 	%fd224, 0d3FE0000000000000;
	fma.rn.f64 	%fd225, %fd223, %fd224, %fd525;
	mul.f64 	%fd226, %fd225, 0d3CA1A62633145C07;
	mov.f64 	%fd227, 0d400921FB54442D18;
	fma.rn.f64 	%fd228, %fd225, %fd227, %fd226;
	and.b64  	%rd98, %rd97, 1;
	mul.rn.f64 	%fd31, %fd228, %fd228;
	setp.eq.b64	%p36, %rd98, 1;
	not.pred 	%p37, %p36;
	selp.f64	%fd229, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p37;
	shl.b64 	%rd99, %rd98, 6;
	mov.u64 	%rd100, __cudart_sin_cos_coeffs;
	add.s64 	%rd101, %rd99, %rd100;
	ld.const.f64 	%fd230, [%rd101+8];
	fma.rn.f64 	%fd231, %fd229, %fd31, %fd230;
	ld.const.f64 	%fd232, [%rd101+16];
	fma.rn.f64 	%fd233, %fd231, %fd31, %fd232;
	ld.const.f64 	%fd234, [%rd101+24];
	fma.rn.f64 	%fd235, %fd233, %fd31, %fd234;
	ld.const.f64 	%fd236, [%rd101+32];
	fma.rn.f64 	%fd237, %fd235, %fd31, %fd236;
	ld.const.f64 	%fd238, [%rd101+40];
	fma.rn.f64 	%fd239, %fd237, %fd31, %fd238;
	ld.const.f64 	%fd240, [%rd101+48];
	fma.rn.f64 	%fd32, %fd239, %fd31, %fd240;
	fma.rn.f64 	%fd524, %fd32, %fd228, %fd228;
	@%p37 bra 	BB0_36;

	mov.f64 	%fd241, 0d3FF0000000000000;
	fma.rn.f64 	%fd524, %fd32, %fd31, %fd241;

BB0_36:
	and.b32  	%r76, %r19, 2;
	setp.eq.s32	%p38, %r76, 0;
	@%p38 bra 	BB0_38;

	mov.f64 	%fd242, 0d0000000000000000;
	mov.f64 	%fd243, 0dBFF0000000000000;
	fma.rn.f64 	%fd524, %fd524, %fd243, %fd242;

BB0_38:
	cvt.rzi.f64.f64	%fd244, %fd525;
	setp.neu.f64	%p39, %fd244, %fd525;
	@%p39 bra 	BB0_40;

	mov.f64 	%fd245, 0d0000000000000000;
	mul.rn.f64 	%fd524, %fd525, %fd245;

BB0_40:
	add.s32 	%r77, %r18, %r18;
	setp.lt.u32	%p40, %r77, -2038431743;
	@%p40 bra 	BB0_42;

	mov.f64 	%fd246, 0d0000000000000000;
	mul.rn.f64 	%fd525, %fd525, %fd246;

BB0_42:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r78}, %fd525;
	}
	add.s32 	%r79, %r78, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r80, %temp}, %fd525;
	}
	mov.b64 	%fd247, {%r80, %r79};
	cvt.rni.f64.f64	%fd248, %fd247;
	cvt.rzi.s64.f64	%rd102, %fd248;
	cvt.u32.u64	%r81, %rd102;
	neg.f64 	%fd249, %fd248;
	fma.rn.f64 	%fd251, %fd249, %fd224, %fd525;
	mul.f64 	%fd252, %fd251, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd254, %fd251, %fd227, %fd252;
	add.s32 	%r20, %r81, 1;
	and.b32  	%r82, %r20, 1;
	shl.b32 	%r83, %r82, 3;
	mul.rn.f64 	%fd42, %fd254, %fd254;
	setp.eq.s32	%p41, %r82, 0;
	selp.f64	%fd255, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p41;
	mul.wide.u32 	%rd103, %r83, 8;
	add.s64 	%rd105, %rd103, %rd100;
	ld.const.f64 	%fd256, [%rd105+8];
	fma.rn.f64 	%fd257, %fd255, %fd42, %fd256;
	ld.const.f64 	%fd258, [%rd105+16];
	fma.rn.f64 	%fd259, %fd257, %fd42, %fd258;
	ld.const.f64 	%fd260, [%rd105+24];
	fma.rn.f64 	%fd261, %fd259, %fd42, %fd260;
	ld.const.f64 	%fd262, [%rd105+32];
	fma.rn.f64 	%fd263, %fd261, %fd42, %fd262;
	ld.const.f64 	%fd264, [%rd105+40];
	fma.rn.f64 	%fd265, %fd263, %fd42, %fd264;
	ld.const.f64 	%fd266, [%rd105+48];
	fma.rn.f64 	%fd43, %fd265, %fd42, %fd266;
	fma.rn.f64 	%fd48, %fd43, %fd254, %fd254;
	@%p41 bra 	BB0_44;

	mov.f64 	%fd267, 0d3FF0000000000000;
	fma.rn.f64 	%fd48, %fd43, %fd42, %fd267;

BB0_44:
	and.b32  	%r84, %r20, 2;
	setp.eq.s32	%p42, %r84, 0;
	@%p42 bra 	BB0_46;

	mov.f64 	%fd268, 0d0000000000000000;
	mov.f64 	%fd269, 0dBFF0000000000000;
	fma.rn.f64 	%fd48, %fd48, %fd269, %fd268;

BB0_46:
	setp.eq.f64	%p43, %fd48, 0d3FF0000000000000;
	mov.f64 	%fd532, 0d3FF0000000000000;
	@%p43 bra 	BB0_72;

	abs.f64 	%fd49, %fd48;
	setp.gtu.f64	%p44, %fd49, 0d7FF0000000000000;
	@%p44 bra 	BB0_71;
	bra.uni 	BB0_48;

BB0_71:
	add.f64 	%fd532, %fd48, 0dBFF0000000000000;
	bra.uni 	BB0_72;

BB0_48:
	setp.eq.f64	%p45, %fd48, 0d7FF0000000000000;
	@%p45 bra 	BB0_70;
	bra.uni 	BB0_49;

BB0_70:
	mov.f64 	%fd461, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r105}, %fd461;
	}
	setp.gt.s32	%p62, %r105, -1;
	selp.f64	%fd532, 0d7FF0000000000000, 0d0000000000000000, %p62;
	bra.uni 	BB0_72;

BB0_49:
	mov.f64 	%fd271, 0dBFF0000000000000;
	mul.rn.f64 	%fd273, %fd224, %fd271;
	cvt.rzi.f64.f64	%fd274, %fd273;
	mov.f64 	%fd275, 0d4000000000000000;
	mul.rn.f64 	%fd276, %fd275, %fd274;
	sub.f64 	%fd277, %fd271, %fd276;
	abs.f64 	%fd50, %fd277;
	setp.eq.f64	%p46, %fd48, 0d0000000000000000;
	@%p46 bra 	BB0_69;
	bra.uni 	BB0_50;

BB0_69:
	setp.eq.f64	%p61, %fd50, 0d3FF0000000000000;
	rcp.rn.f64 	%fd458, %fd48;
	mov.f64 	%fd459, 0d0000000000000000;
	rcp.rn.f64 	%fd460, %fd459;
	selp.f64	%fd532, %fd458, %fd460, %p61;
	bra.uni 	BB0_72;

BB0_50:
	setp.eq.f64	%p47, %fd48, 0dFFF0000000000000;
	@%p47 bra 	BB0_67;
	bra.uni 	BB0_51;

BB0_67:
	div.rn.f64 	%fd532, %fd271, %fd48;
	setp.neu.f64	%p60, %fd50, 0d3FF0000000000000;
	@%p60 bra 	BB0_72;

	mov.b64 	 %rd108, %fd532;
	xor.b64  	%rd109, %rd108, -9223372036854775808;
	mov.b64 	 %fd532, %rd109;
	bra.uni 	BB0_72;

BB0_51:
	setp.geu.f64	%p48, %fd48, 0d0000000000000000;
	@%p48 bra 	BB0_53;

	cvt.rzi.f64.f64	%fd280, %fd271;
	setp.neu.f64	%p49, %fd280, 0dBFF0000000000000;
	mov.f64 	%fd532, 0dFFF8000000000000;
	@%p49 bra 	BB0_72;

BB0_53:
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r116}, %fd49; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r115, hi}, %fd49; 
	}
	// inline asm
	bfe.u32 	%r117, %r116, 20, 11;
	setp.ne.s32	%p50, %r117, 0;
	@%p50 bra 	BB0_55;

	mov.f64 	%fd285, 0d4350000000000000;
	mul.rn.f64 	%fd284, %fd49, %fd285;
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r116}, %fd284; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r115, hi}, %fd284; 
	}
	// inline asm
	bfe.u32 	%r89, %r116, 20, 11;
	add.s32 	%r117, %r89, -54;

BB0_55:
	add.s32 	%r118, %r117, -1023;
	and.b32  	%r92, %r116, -2146435073;
	or.b32  	%r91, %r92, 1072693248;
	// inline asm
	mov.b64 	%fd528, {%r115, %r91};
	// inline asm
	setp.lt.u32	%p51, %r91, 1073127583;
	@%p51 bra 	BB0_57;

	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r93, hi}, %fd528; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r94}, %fd528; 
	}
	// inline asm
	add.s32 	%r96, %r94, -1048576;
	// inline asm
	mov.b64 	%fd528, {%r93, %r96};
	// inline asm
	add.s32 	%r118, %r117, -1022;

BB0_57:
	add.f64 	%fd374, %fd528, 0d3FF0000000000000;
	rcp.rn.f64 	%fd375, %fd374;
	add.f64 	%fd316, %fd528, 0dBFF0000000000000;
	mul.rn.f64 	%fd376, %fd316, %fd375;
	add.f64 	%fd364, %fd376, %fd376;
	mul.rn.f64 	%fd312, %fd364, %fd364;
	mov.f64 	%fd291, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd293, 0d3ED0F5D241AD3B5A;
	// inline asm
	fma.rn.f64 	%fd290, %fd291, %fd312, %fd293;
	// inline asm
	mov.f64 	%fd297, 0d3EF3B20A75488A3F;
	// inline asm
	fma.rn.f64 	%fd294, %fd290, %fd312, %fd297;
	// inline asm
	mov.f64 	%fd301, 0d3F1745CDE4FAECD5;
	// inline asm
	fma.rn.f64 	%fd298, %fd294, %fd312, %fd301;
	// inline asm
	mov.f64 	%fd305, 0d3F3C71C7258A578B;
	// inline asm
	fma.rn.f64 	%fd302, %fd298, %fd312, %fd305;
	// inline asm
	mov.f64 	%fd309, 0d3F6249249242B910;
	// inline asm
	fma.rn.f64 	%fd306, %fd302, %fd312, %fd309;
	// inline asm
	mov.f64 	%fd313, 0d3F89999999999DFB;
	// inline asm
	fma.rn.f64 	%fd310, %fd306, %fd312, %fd313;
	// inline asm
	mul.rn.f64 	%fd377, %fd310, %fd312;
	sub.f64 	%fd378, %fd316, %fd364;
	mul.rn.f64 	%fd317, %fd275, %fd378;
	neg.f64 	%fd315, %fd364;
	// inline asm
	fma.rn.f64 	%fd314, %fd315, %fd316, %fd317;
	// inline asm
	mul.rn.f64 	%fd360, %fd375, %fd314;
	add.f64 	%fd380, %fd377, 0d3FB5555555555555;
	mov.f64 	%fd381, 0d3FB5555555555555;
	sub.f64 	%fd382, %fd381, %fd380;
	add.f64 	%fd383, %fd377, %fd382;
	add.f64 	%fd384, %fd383, 0d0000000000000000;
	add.f64 	%fd385, %fd384, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd327, %fd380, %fd385;
	sub.f64 	%fd386, %fd380, %fd327;
	add.f64 	%fd331, %fd385, %fd386;
	mul.rn.f64 	%fd387, %fd327, %fd364;
	neg.f64 	%fd321, %fd387;
	// inline asm
	fma.rn.f64 	%fd318, %fd327, %fd364, %fd321;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd322, %fd331, %fd360, %fd318;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd326, %fd327, %fd360, %fd322;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd330, %fd331, %fd364, %fd326;
	// inline asm
	add.f64 	%fd343, %fd387, %fd330;
	sub.f64 	%fd388, %fd387, %fd343;
	add.f64 	%fd347, %fd330, %fd388;
	mul.rn.f64 	%fd389, %fd343, %fd364;
	neg.f64 	%fd337, %fd389;
	// inline asm
	fma.rn.f64 	%fd334, %fd343, %fd364, %fd337;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd338, %fd347, %fd360, %fd334;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd342, %fd343, %fd360, %fd338;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd346, %fd347, %fd364, %fd342;
	// inline asm
	add.f64 	%fd359, %fd389, %fd346;
	sub.f64 	%fd390, %fd389, %fd359;
	add.f64 	%fd363, %fd346, %fd390;
	mul.rn.f64 	%fd391, %fd359, %fd364;
	neg.f64 	%fd353, %fd391;
	// inline asm
	fma.rn.f64 	%fd350, %fd359, %fd364, %fd353;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd354, %fd363, %fd360, %fd350;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd358, %fd359, %fd360, %fd354;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd362, %fd363, %fd364, %fd358;
	// inline asm
	add.f64 	%fd392, %fd391, %fd362;
	sub.f64 	%fd393, %fd391, %fd392;
	add.f64 	%fd394, %fd362, %fd393;
	add.f64 	%fd395, %fd364, %fd392;
	sub.f64 	%fd396, %fd364, %fd395;
	add.f64 	%fd397, %fd392, %fd396;
	add.f64 	%fd398, %fd394, %fd397;
	add.f64 	%fd399, %fd360, %fd398;
	add.f64 	%fd400, %fd395, %fd399;
	sub.f64 	%fd401, %fd395, %fd400;
	add.f64 	%fd402, %fd399, %fd401;
	cvt.rn.f64.s32	%fd403, %r118;
	mov.f64 	%fd404, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd405, %fd403, %fd404;
	mov.f64 	%fd406, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd407, %fd403, %fd406;
	add.f64 	%fd408, %fd405, %fd400;
	sub.f64 	%fd409, %fd405, %fd408;
	add.f64 	%fd410, %fd400, %fd409;
	add.f64 	%fd411, %fd402, %fd410;
	add.f64 	%fd412, %fd407, %fd411;
	add.f64 	%fd367, %fd408, %fd412;
	sub.f64 	%fd413, %fd408, %fd367;
	add.f64 	%fd371, %fd412, %fd413;
	mul.rn.f64 	%fd414, %fd367, %fd271;
	neg.f64 	%fd369, %fd414;
	// inline asm
	fma.rn.f64 	%fd366, %fd367, %fd271, %fd369;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd370, %fd371, %fd271, %fd366;
	// inline asm
	add.f64 	%fd54, %fd414, %fd370;
	sub.f64 	%fd415, %fd414, %fd54;
	add.f64 	%fd55, %fd370, %fd415;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r33}, %fd54;
	}
	mov.b32 	 %f1, %r33;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p52, %f2, 0f40874911;
	@%p52 bra 	BB0_59;
	bra.uni 	BB0_58;

BB0_59:
	mov.f64 	%fd419, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd420, %fd54, %fd419;
	mov.f64 	%fd421, 0d4338000000000000;
	add.rn.f64 	%fd422, %fd420, %fd421;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r34, %temp}, %fd422;
	}
	mov.f64 	%fd423, 0dC338000000000000;
	add.rn.f64 	%fd424, %fd422, %fd423;
	mov.f64 	%fd425, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd426, %fd424, %fd425, %fd54;
	mov.f64 	%fd427, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd428, %fd424, %fd427, %fd426;
	mov.f64 	%fd429, 0d3E928AF3FCA213EA;
	mov.f64 	%fd430, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd431, %fd430, %fd428, %fd429;
	mov.f64 	%fd432, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd433, %fd431, %fd428, %fd432;
	mov.f64 	%fd434, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd435, %fd433, %fd428, %fd434;
	mov.f64 	%fd436, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd437, %fd435, %fd428, %fd436;
	mov.f64 	%fd438, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd439, %fd437, %fd428, %fd438;
	mov.f64 	%fd440, 0d3F81111111122322;
	fma.rn.f64 	%fd441, %fd439, %fd428, %fd440;
	mov.f64 	%fd442, 0d3FA55555555502A1;
	fma.rn.f64 	%fd443, %fd441, %fd428, %fd442;
	mov.f64 	%fd444, 0d3FC5555555555511;
	fma.rn.f64 	%fd445, %fd443, %fd428, %fd444;
	mov.f64 	%fd446, 0d3FE000000000000B;
	fma.rn.f64 	%fd447, %fd445, %fd428, %fd446;
	mov.f64 	%fd448, 0d3FF0000000000000;
	fma.rn.f64 	%fd449, %fd447, %fd428, %fd448;
	fma.rn.f64 	%fd529, %fd449, %fd428, %fd448;
	abs.s32 	%r97, %r34;
	setp.lt.s32	%p55, %r97, 1023;
	@%p55 bra 	BB0_61;
	bra.uni 	BB0_60;

BB0_61:
	shl.b32 	%r103, %r34, 20;
	add.s32 	%r119, %r103, 1072693248;
	bra.uni 	BB0_62;

BB0_58:
	setp.lt.s32	%p53, %r33, 0;
	selp.f64	%fd416, 0d0000000000000000, 0d7FF0000000000000, %p53;
	abs.f64 	%fd417, %fd54;
	setp.gtu.f64	%p54, %fd417, 0d7FF0000000000000;
	add.f64 	%fd418, %fd54, %fd54;
	selp.f64	%fd532, %fd418, %fd416, %p54;
	bra.uni 	BB0_63;

BB0_60:
	add.s32 	%r98, %r34, 2046;
	shl.b32 	%r99, %r98, 19;
	and.b32  	%r100, %r99, -1048576;
	shl.b32 	%r101, %r98, 20;
	sub.s32 	%r119, %r101, %r100;
	mov.u32 	%r102, 0;
	mov.b64 	%fd450, {%r102, %r100};
	mul.f64 	%fd529, %fd529, %fd450;

BB0_62:
	mov.u32 	%r104, 0;
	mov.b64 	%fd451, {%r104, %r119};
	mul.f64 	%fd532, %fd529, %fd451;

BB0_63:
	abs.f64 	%fd452, %fd532;
	setp.eq.f64	%p56, %fd452, 0d7FF0000000000000;
	@%p56 bra 	BB0_65;

	// inline asm
	fma.rn.f64 	%fd532, %fd532, %fd55, %fd532;
	// inline asm

BB0_65:
	setp.neu.f64	%p57, %fd50, 0d3FF0000000000000;
	or.pred  	%p59, %p48, %p57;
	@%p59 bra 	BB0_72;

	mov.b64 	 %rd106, %fd532;
	xor.b64  	%rd107, %rd106, -9223372036854775808;
	mov.b64 	 %fd532, %rd107;

BB0_72:
	mul.f64 	%fd71, %fd524, %fd532;
	setp.lt.f64	%p63, %fd71, 0d0000000000000000;
	setp.gt.f64	%p64, %fd25, 0d0000000000000000;
	and.pred  	%p65, %p63, %p64;
	@%p65 bra 	BB0_74;

	setp.geu.f64	%p66, %fd25, 0d0000000000000000;
	setp.leu.f64	%p67, %fd71, 0d0000000000000000;
	or.pred  	%p68, %p66, %p67;
	@%p68 bra 	BB0_83;

BB0_74:
	neg.f64 	%fd72, %fd25;
	setp.eq.f64	%p69, %fd71, %fd72;
	mov.f64 	%fd533, 0d0000000000000000;
	@%p69 bra 	BB0_84;

	setp.eq.f64	%p70, %fd71, 0d0000000000000000;
	setp.eq.f64	%p71, %fd25, 0d8000000000000000;
	or.pred  	%p72, %p70, %p71;
	@%p72 bra 	BB0_83;

	add.f64 	%fd463, %fd25, %fd71;
	abs.f64 	%fd73, %fd463;
	abs.f64 	%fd464, %fd73;
	setp.geu.f64	%p73, %fd464, 0d7FF0000000000000;
	@%p73 bra 	BB0_83;

	abs.f64 	%fd74, %fd71;
	mul.f64 	%fd465, %fd74, 0d3D30000000000000;
	setp.gt.f64	%p74, %fd73, %fd465;
	@%p74 bra 	BB0_83;

	abs.f64 	%fd75, %fd72;
	mul.f64 	%fd466, %fd75, 0d3D30000000000000;
	setp.gt.f64	%p75, %fd73, %fd466;
	@%p75 bra 	BB0_83;

	mov.b64 	 %rd110, %fd73;
	setp.gt.s64	%p76, %rd110, 9007199254740991;
	setp.gtu.f64	%p77, %fd73, 0d001FFFFFFFFFFFFF;
	or.pred  	%p78, %p76, %p77;
	@%p78 bra 	BB0_81;

	mov.b64 	 %rd111, %fd74;
	setp.lt.s64	%p79, %rd111, 9007199254740992;
	setp.le.f64	%p80, %fd74, 0d001FFFFFFFFFFFFF;
	and.pred  	%p81, %p79, %p80;
	@%p81 bra 	BB0_82;
	bra.uni 	BB0_81;

BB0_82:
	mov.b64 	 %rd112, %fd75;
	setp.gt.s64	%p85, %rd112, 9007199254740991;
	setp.gtu.f64	%p86, %fd75, 0d001FFFFFFFFFFFFF;
	or.pred  	%p87, %p86, %p85;
	mul.f64 	%fd471, %fd74, 0d3CF0000000000000;
	setp.lt.f64	%p88, %fd73, %fd471;
	and.pred  	%p89, %p87, %p88;
	mul.f64 	%fd472, %fd75, 0d3CF0000000000000;
	setp.lt.f64	%p90, %fd73, %fd472;
	and.pred  	%p91, %p90, %p89;
	@%p91 bra 	BB0_84;
	bra.uni 	BB0_83;

BB0_81:
	mul.f64 	%fd468, %fd74, 0d3CF0000000000000;
	setp.geu.f64	%p82, %fd73, %fd468;
	mul.f64 	%fd469, %fd75, 0d3CF0000000000000;
	setp.geu.f64	%p83, %fd73, %fd469;
	or.pred  	%p84, %p82, %p83;
	@%p84 bra 	BB0_83;
	bra.uni 	BB0_84;

BB0_83:
	add.f64 	%fd473, %fd25, %fd71;
	mul.f64 	%fd533, %fd473, 0d3FD45F306DC9C883;

BB0_84:
	mov.u64 	%rd123, __cudart_sin_cos_coeffs;
	mov.f64 	%fd511, 0d400921FB54442D18;
	mov.f64 	%fd510, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r106}, %fd533;
	}
	add.s32 	%r107, %r106, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r108, %temp}, %fd533;
	}
	mov.b64 	%fd474, {%r108, %r107};
	cvt.rni.f64.f64	%fd475, %fd474;
	cvt.rzi.s64.f64	%rd113, %fd475;
	cvt.u32.u64	%r38, %rd113;
	neg.f64 	%fd476, %fd475;
	fma.rn.f64 	%fd478, %fd476, %fd510, %fd533;
	mul.f64 	%fd479, %fd478, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd481, %fd478, %fd511, %fd479;
	and.b64  	%rd114, %rd113, 1;
	mul.rn.f64 	%fd78, %fd481, %fd481;
	setp.eq.b64	%p92, %rd114, 1;
	not.pred 	%p93, %p92;
	selp.f64	%fd482, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p93;
	shl.b64 	%rd115, %rd114, 6;
	add.s64 	%rd117, %rd115, %rd123;
	ld.const.f64 	%fd483, [%rd117+8];
	fma.rn.f64 	%fd484, %fd482, %fd78, %fd483;
	ld.const.f64 	%fd485, [%rd117+16];
	fma.rn.f64 	%fd486, %fd484, %fd78, %fd485;
	ld.const.f64 	%fd487, [%rd117+24];
	fma.rn.f64 	%fd488, %fd486, %fd78, %fd487;
	ld.const.f64 	%fd489, [%rd117+32];
	fma.rn.f64 	%fd490, %fd488, %fd78, %fd489;
	ld.const.f64 	%fd491, [%rd117+40];
	fma.rn.f64 	%fd492, %fd490, %fd78, %fd491;
	ld.const.f64 	%fd493, [%rd117+48];
	fma.rn.f64 	%fd79, %fd492, %fd78, %fd493;
	fma.rn.f64 	%fd536, %fd79, %fd481, %fd481;
	@%p93 bra 	BB0_86;

	mov.f64 	%fd494, 0d3FF0000000000000;
	fma.rn.f64 	%fd536, %fd79, %fd78, %fd494;

BB0_86:
	and.b32  	%r109, %r38, 2;
	setp.eq.s32	%p94, %r109, 0;
	@%p94 bra 	BB0_88;

	mov.f64 	%fd495, 0d0000000000000000;
	mov.f64 	%fd496, 0dBFF0000000000000;
	fma.rn.f64 	%fd536, %fd536, %fd496, %fd495;

BB0_88:
	cvt.rzi.f64.f64	%fd497, %fd533;
	setp.neu.f64	%p95, %fd497, %fd533;
	@%p95 bra 	BB0_90;

	mov.f64 	%fd498, 0d0000000000000000;
	mul.rn.f64 	%fd536, %fd533, %fd498;

BB0_90:
	setp.lt.f64	%p96, %fd9, 0d0000000000000000;
	setp.lt.f64	%p97, %fd536, 0d0000000000000000;
	and.pred  	%p98, %p97, %p96;
	@%p98 bra 	BB0_92;

	setp.leu.f64	%p99, %fd536, 0d0000000000000000;
	setp.leu.f64	%p100, %fd9, 0d0000000000000000;
	or.pred  	%p101, %p99, %p100;
	@%p101 bra 	BB0_101;

BB0_92:
	setp.eq.f64	%p102, %fd536, %fd9;
	mov.f64 	%fd537, 0d0000000000000000;
	@%p102 bra 	BB0_102;

	setp.eq.f64	%p103, %fd536, 0d0000000000000000;
	setp.eq.f64	%p104, %fd9, 0d0000000000000000;
	or.pred  	%p105, %p103, %p104;
	@%p105 bra 	BB0_101;

	sub.f64 	%fd500, %fd536, %fd9;
	abs.f64 	%fd87, %fd500;
	abs.f64 	%fd501, %fd87;
	setp.geu.f64	%p106, %fd501, 0d7FF0000000000000;
	@%p106 bra 	BB0_101;

	abs.f64 	%fd88, %fd536;
	mul.f64 	%fd502, %fd88, 0d3D30000000000000;
	setp.gt.f64	%p107, %fd87, %fd502;
	@%p107 bra 	BB0_101;

	abs.f64 	%fd89, %fd9;
	mul.f64 	%fd503, %fd89, 0d3D30000000000000;
	setp.gt.f64	%p108, %fd87, %fd503;
	@%p108 bra 	BB0_101;

	mov.b64 	 %rd118, %fd87;
	setp.gt.s64	%p109, %rd118, 9007199254740991;
	setp.gtu.f64	%p110, %fd87, 0d001FFFFFFFFFFFFF;
	or.pred  	%p111, %p109, %p110;
	@%p111 bra 	BB0_99;

	mov.b64 	 %rd119, %fd88;
	setp.lt.s64	%p112, %rd119, 9007199254740992;
	setp.le.f64	%p113, %fd88, 0d001FFFFFFFFFFFFF;
	and.pred  	%p114, %p112, %p113;
	@%p114 bra 	BB0_100;
	bra.uni 	BB0_99;

BB0_100:
	mov.b64 	 %rd120, %fd89;
	setp.gt.s64	%p118, %rd120, 9007199254740991;
	setp.gtu.f64	%p119, %fd89, 0d001FFFFFFFFFFFFF;
	or.pred  	%p120, %p119, %p118;
	mul.f64 	%fd508, %fd88, 0d3CF0000000000000;
	setp.lt.f64	%p121, %fd87, %fd508;
	and.pred  	%p122, %p120, %p121;
	mul.f64 	%fd509, %fd89, 0d3CF0000000000000;
	setp.lt.f64	%p123, %fd87, %fd509;
	and.pred  	%p124, %p123, %p122;
	@%p124 bra 	BB0_102;
	bra.uni 	BB0_101;

BB0_99:
	mul.f64 	%fd505, %fd88, 0d3CF0000000000000;
	setp.geu.f64	%p115, %fd87, %fd505;
	mul.f64 	%fd506, %fd89, 0d3CF0000000000000;
	setp.geu.f64	%p116, %fd87, %fd506;
	or.pred  	%p117, %p115, %p116;
	@%p117 bra 	BB0_101;
	bra.uni 	BB0_102;

BB0_101:
	sub.f64 	%fd537, %fd536, %fd9;

BB0_102:
	ld.param.u64 	%rd124, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0];
	add.s64 	%rd122, %rd124, %rd52;
	st.global.f64 	[%rd122], %fd537;
	ret;
}


  